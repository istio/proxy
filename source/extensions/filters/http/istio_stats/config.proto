/* Copyright 2019 Istio Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

// $title: Stats Config
// $description: Configuration for Stats Filter.
// $location: https://istio.io/docs/reference/config/proxy_extensions/stats.html
// $weight: 20

package stats;

import "google/protobuf/duration.proto";

// Metric instance configuration overrides.
// The metric value and the metric type are optional and permit changing the
// reported value for an existing metric.
// The standard metrics are optimized and reported through a "fast-path".
// The customizations allow full configurability, at the cost of a "slower"
// path.
message MetricConfig {
  // (Optional) Collection of tag names and tag expressions to include in the
  // metric. Conflicts are resolved by the tag name by overriding previously
  // supplied values.
  map<string, string> dimensions = 1;

  // (Optional) Metric name to restrict the override to a metric. If not
  // specified, applies to all.
  string name = 2;

  // (Optional) A list of tags to remove.
  repeated string tags_to_remove = 3;

  // NOT IMPLEMENTED. (Optional) Conditional enabling the override.
  string match = 4;

  // (Optional) If this is set to true, the metric(s) selected by this
  // configuration will not be generated or reported.
  bool drop = 5;
}

enum MetricType {
  COUNTER = 0;
  GAUGE = 1;
  HISTOGRAM = 2;
}

message MetricDefinition {
  // Metric name.
  string name = 1;

  // Metric value expression.
  string value = 2;

  // Metric type.
  MetricType type = 3;
}

// Specifies the proxy deployment type.
enum Reporter {
  // Default value is inferred from the listener direction, as either client or
  // server sidecar.
  UNSPECIFIED = 0;

  // Shared server gateway, e.g. "waypoint".
  SERVER_GATEWAY = 1;
}

message PluginConfig {
  reserved 1;
  reserved "debug";

  reserved 2;
  reserved "max_peer_cache_size";

  reserved 3;
  reserved "stat_prefix";

  reserved 4;
  reserved "field_separator";

  reserved 5;
  reserved "value_separator";

  // Optional: Disable using host header as a fallback if destination service is
  // not available from the controlplane. Disable the fallback if the host
  // header originates outsides the mesh, like at ingress.
  bool disable_host_header_fallback = 6;

  // Optional. Allows configuration of the time between calls out to for TCP
  // metrics reporting. The default duration is `5s`.
  google.protobuf.Duration tcp_reporting_duration = 7;

  // Metric overrides.
  repeated MetricConfig metrics = 8;

  // Metric definitions.
  repeated MetricDefinition definitions = 9;

  // Proxy deployment type.
  Reporter reporter = 10;

  // Metric scope rotation interval. Set to 0 to disable the metric scope rotation.
  // Defaults to 0.
  // DEPRECATED.
  google.protobuf.Duration rotation_interval = 11;

  // Metric expiry graceful deletion interval. No-op if the metric rotation is disabled.
  // Defaults to 5m. Must be >=1s.
  // DEPRECATED.
  google.protobuf.Duration graceful_deletion_interval = 12;
}
