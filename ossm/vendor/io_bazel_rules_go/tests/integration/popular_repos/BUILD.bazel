# Copyright 2017 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

##############################
# Generated file, do not edit!
##############################

load("@bazel_skylib//rules:build_test.bzl", "build_test")

test_suite(
    name = "org_golang_x_crypto",
    tests = [
        "@org_golang_x_crypto//acme:acme_test",
        "@org_golang_x_crypto//acme/autocert:autocert_test",
        "@org_golang_x_crypto//argon2:argon2_test",
        "@org_golang_x_crypto//bcrypt:bcrypt_test",
        "@org_golang_x_crypto//blake2b:blake2b_test",
        "@org_golang_x_crypto//blake2s:blake2s_test",
        "@org_golang_x_crypto//blowfish:blowfish_test",
        "@org_golang_x_crypto//bn256:bn256_test",
        "@org_golang_x_crypto//cast5:cast5_test",
        "@org_golang_x_crypto//chacha20:chacha20_test",
        "@org_golang_x_crypto//chacha20poly1305:chacha20poly1305_test",
        "@org_golang_x_crypto//cryptobyte:cryptobyte_test",
        "@org_golang_x_crypto//curve25519:curve25519_test",
        "@org_golang_x_crypto//curve25519/internal/field:field_test",
        "@org_golang_x_crypto//ed25519:ed25519_test",
        "@org_golang_x_crypto//hkdf:hkdf_test",
        "@org_golang_x_crypto//internal/alias:alias_test",
        "@org_golang_x_crypto//internal/poly1305:poly1305_test",
        "@org_golang_x_crypto//md4:md4_test",
        "@org_golang_x_crypto//nacl/auth:auth_test",
        "@org_golang_x_crypto//nacl/box:box_test",
        "@org_golang_x_crypto//nacl/sign:sign_test",
        "@org_golang_x_crypto//ocsp:ocsp_test",
        "@org_golang_x_crypto//openpgp:openpgp_test",
        "@org_golang_x_crypto//openpgp/armor:armor_test",
        "@org_golang_x_crypto//openpgp/clearsign:clearsign_test",
        "@org_golang_x_crypto//openpgp/elgamal:elgamal_test",
        "@org_golang_x_crypto//openpgp/packet:packet_test",
        "@org_golang_x_crypto//openpgp/s2k:s2k_test",
        "@org_golang_x_crypto//otr:otr_test",
        "@org_golang_x_crypto//pbkdf2:pbkdf2_test",
        "@org_golang_x_crypto//pkcs12:pkcs12_test",
        "@org_golang_x_crypto//pkcs12/internal/rc2:rc2_test",
        "@org_golang_x_crypto//ripemd160:ripemd160_test",
        "@org_golang_x_crypto//salsa20:salsa20_test",
        "@org_golang_x_crypto//salsa20/salsa:salsa_test",
        "@org_golang_x_crypto//scrypt:scrypt_test",
        "@org_golang_x_crypto//sha3:sha3_test",
        "@org_golang_x_crypto//ssh/internal/bcrypt_pbkdf:bcrypt_pbkdf_test",
        "@org_golang_x_crypto//ssh/knownhosts:knownhosts_test",
        "@org_golang_x_crypto//tea:tea_test",
        "@org_golang_x_crypto//twofish:twofish_test",
        "@org_golang_x_crypto//x509roots/nss:nss_test",
        "@org_golang_x_crypto//xtea:xtea_test",
        "@org_golang_x_crypto//xts:xts_test",
    ],
)

test_suite(
    name = "org_golang_x_net",
    tests = [
        "@org_golang_x_net//context:context_test",
        "@org_golang_x_net//context/ctxhttp:ctxhttp_test",
        "@org_golang_x_net//dns/dnsmessage:dnsmessage_test",
        "@org_golang_x_net//html:html_test",
        "@org_golang_x_net//html/atom:atom_test",
        "@org_golang_x_net//http/httpguts:httpguts_test",
        "@org_golang_x_net//http/httpproxy:httpproxy_test",
        "@org_golang_x_net//http2/h2c:h2c_test",
        "@org_golang_x_net//http2/hpack:hpack_test",
        "@org_golang_x_net//idna:idna_test",
        "@org_golang_x_net//internal/quic/cmd/interop:interop_test",
        "@org_golang_x_net//internal/socks:socks_test",
        "@org_golang_x_net//internal/sockstest:sockstest_test",
        "@org_golang_x_net//internal/timeseries:timeseries_test",
        "@org_golang_x_net//ipv4:ipv4_test",
        "@org_golang_x_net//ipv6:ipv6_test",
        "@org_golang_x_net//netutil:netutil_test",
        "@org_golang_x_net//proxy:proxy_test",
        "@org_golang_x_net//publicsuffix:publicsuffix_test",
        "@org_golang_x_net//quic:quic_test",
        "@org_golang_x_net//quic/qlog:qlog_test",
        "@org_golang_x_net//route:route_test",
        "@org_golang_x_net//trace:trace_test",
        "@org_golang_x_net//webdav:webdav_test",
        "@org_golang_x_net//webdav/internal/xml:xml_test",
        "@org_golang_x_net//websocket:websocket_test",
        "@org_golang_x_net//xsrftoken:xsrftoken_test",
    ],
)

test_suite(
    name = "org_golang_x_sys",
    tests = [
        "@org_golang_x_sys//cpu:cpu_test",
        "@org_golang_x_sys//execabs:execabs_test",
        "@org_golang_x_sys//plan9:plan9_test",
        "@org_golang_x_sys//unix/internal/mkmerge:mkmerge_test",
        "@org_golang_x_sys//windows/mkwinsyscall:mkwinsyscall_test",
        "@org_golang_x_sys//windows/registry:registry_test",
        "@org_golang_x_sys//windows/svc:svc_test",
        "@org_golang_x_sys//windows/svc/eventlog:eventlog_test",
        "@org_golang_x_sys//windows/svc/mgr:mgr_test",
    ],
)

test_suite(
    name = "org_golang_x_text",
    tests = [
        "@org_golang_x_text//cases:cases_test",
        "@org_golang_x_text//collate:collate_test",
        "@org_golang_x_text//collate/build:build_test",
        "@org_golang_x_text//currency:currency_test",
        "@org_golang_x_text//date:date_test",
        "@org_golang_x_text//encoding:encoding_test",
        "@org_golang_x_text//encoding/htmlindex:htmlindex_test",
        "@org_golang_x_text//encoding/ianaindex:ianaindex_test",
        "@org_golang_x_text//feature/plural:plural_test",
        "@org_golang_x_text//internal:internal_test",
        "@org_golang_x_text//internal/catmsg:catmsg_test",
        "@org_golang_x_text//internal/colltab:colltab_test",
        "@org_golang_x_text//internal/export/idna:idna_test",
        "@org_golang_x_text//internal/export/unicode:unicode_test",
        "@org_golang_x_text//internal/format:format_test",
        "@org_golang_x_text//internal/language:language_test",
        "@org_golang_x_text//internal/language/compact:compact_test",
        "@org_golang_x_text//internal/number:number_test",
        "@org_golang_x_text//internal/stringset:stringset_test",
        "@org_golang_x_text//internal/tag:tag_test",
        "@org_golang_x_text//internal/triegen:triegen_test",
        "@org_golang_x_text//internal/ucd:ucd_test",
        "@org_golang_x_text//language:language_test",
        "@org_golang_x_text//language/display:display_test",
        "@org_golang_x_text//message:message_test",
        "@org_golang_x_text//message/catalog:catalog_test",
        "@org_golang_x_text//number:number_test",
        "@org_golang_x_text//runes:runes_test",
        "@org_golang_x_text//search:search_test",
        "@org_golang_x_text//secure/bidirule:bidirule_test",
        "@org_golang_x_text//secure/precis:precis_test",
        "@org_golang_x_text//transform:transform_test",
        "@org_golang_x_text//unicode/bidi:bidi_test",
        "@org_golang_x_text//unicode/cldr:cldr_test",
        "@org_golang_x_text//unicode/norm:norm_test",
        "@org_golang_x_text//unicode/rangetable:rangetable_test",
        "@org_golang_x_text//unicode/runenames:runenames_test",
        "@org_golang_x_text//width:width_test",
    ],
)

test_suite(
    name = "org_golang_x_tools",
    tests = [
        "@org_golang_x_tools//benchmark/parse:parse_test",
        "@org_golang_x_tools//cmd/benchcmp:benchcmp_test",
        "@org_golang_x_tools//cmd/bisect:bisect_test",
        "@org_golang_x_tools//cmd/digraph:digraph_test",
        "@org_golang_x_tools//cmd/go-contrib-init:go-contrib-init_test",
        "@org_golang_x_tools//cmd/splitdwarf/internal/macho:macho_test",
        "@org_golang_x_tools//cover:cover_test",
        "@org_golang_x_tools//go/analysis:analysis_test",
        "@org_golang_x_tools//go/analysis/passes/directive/testdata/src/a:a_test",
        "@org_golang_x_tools//go/analysis/passes/internal/analysisutil:analysisutil_test",
        "@org_golang_x_tools//go/ast/astutil:astutil_test",
        "@org_golang_x_tools//go/callgraph:callgraph_test",
        "@org_golang_x_tools//go/callgraph/static:static_test",
        "@org_golang_x_tools//go/callgraph/vta/internal/trie:trie_test",
        "@org_golang_x_tools//godoc/redirect:redirect_test",
        "@org_golang_x_tools//godoc/vfs:vfs_test",
        "@org_golang_x_tools//godoc/vfs/gatefs:gatefs_test",
        "@org_golang_x_tools//godoc/vfs/mapfs:mapfs_test",
        "@org_golang_x_tools//internal/aliases:aliases_test",
        "@org_golang_x_tools//internal/analysisinternal:analysisinternal_test",
        "@org_golang_x_tools//internal/bisect:bisect_test",
        "@org_golang_x_tools//internal/diff:diff_test",
        "@org_golang_x_tools//internal/diff/lcs:lcs_test",
        "@org_golang_x_tools//internal/diff/myers:myers_test",
        "@org_golang_x_tools//internal/edit:edit_test",
        "@org_golang_x_tools//internal/event:event_test",
        "@org_golang_x_tools//internal/event/export:export_test",
        "@org_golang_x_tools//internal/event/export/ocagent:ocagent_test",
        "@org_golang_x_tools//internal/event/export/ocagent/wire:wire_test",
        "@org_golang_x_tools//internal/event/keys:keys_test",
        "@org_golang_x_tools//internal/event/label:label_test",
        "@org_golang_x_tools//internal/fuzzy:fuzzy_test",
        "@org_golang_x_tools//internal/gopathwalk:gopathwalk_test",
        "@org_golang_x_tools//internal/jsonrpc2:jsonrpc2_test",
        "@org_golang_x_tools//internal/jsonrpc2/servertest:servertest_test",
        "@org_golang_x_tools//internal/jsonrpc2_v2:jsonrpc2_v2_test",
        "@org_golang_x_tools//internal/memoize:memoize_test",
        "@org_golang_x_tools//internal/proxydir:proxydir_test",
        "@org_golang_x_tools//internal/robustio:robustio_test",
        "@org_golang_x_tools//internal/stack:stack_test",
        "@org_golang_x_tools//internal/tokeninternal:tokeninternal_test",
        "@org_golang_x_tools//internal/typesinternal:typesinternal_test",
        "@org_golang_x_tools//playground/socket:socket_test",
        "@org_golang_x_tools//refactor/satisfy:satisfy_test",
        "@org_golang_x_tools//txtar:txtar_test",
    ],
)

test_suite(
    name = "com_github_golang_glog",
    tests = [
        "@com_github_golang_glog//:glog_test",
    ],
)

test_suite(
    name = "org_golang_x_sync",
    tests = [
        "@org_golang_x_sync//errgroup:errgroup_test",
        "@org_golang_x_sync//semaphore:semaphore_test",
        "@org_golang_x_sync//singleflight:singleflight_test",
        "@org_golang_x_sync//syncmap:syncmap_test",
    ],
)

test_suite(
    name = "org_golang_x_mod",
    tests = [
        "@org_golang_x_mod//modfile:modfile_test",
        "@org_golang_x_mod//module:module_test",
        "@org_golang_x_mod//semver:semver_test",
        "@org_golang_x_mod//sumdb:sumdb_test",
        "@org_golang_x_mod//sumdb/dirhash:dirhash_test",
        "@org_golang_x_mod//sumdb/note:note_test",
        "@org_golang_x_mod//sumdb/storage:storage_test",
    ],
)

build_test(
    name = "build_only",
    targets = [
        "@org_golang_x_crypto//nacl/secretbox:secretbox",
        "@org_golang_x_crypto//ssh/agent:agent",
        "@org_golang_x_crypto//ssh/test:test",
        "@org_golang_x_crypto//ssh:ssh",
        "@org_golang_x_net//bpf:bpf",
        "@org_golang_x_net//html/charset:charset",
        "@org_golang_x_net//http2:http2",
        "@org_golang_x_net//icmp:icmp",
        "@org_golang_x_net//nettest:nettest",
        "@org_golang_x_net//lif:lif",
        "@org_golang_x_sys//unix:unix",
        "@org_golang_x_sys//windows:windows",
        "@org_golang_x_text//encoding/charmap:charmap",
        "@org_golang_x_text//encoding/japanese:japanese",
        "@org_golang_x_text//encoding/korean:korean",
        "@org_golang_x_text//encoding/simplifiedchinese:simplifiedchinese",
        "@org_golang_x_text//encoding/traditionalchinese:traditionalchinese",
        "@org_golang_x_text//encoding/unicode/utf32:utf32",
        "@org_golang_x_text//encoding/unicode:unicode",
        "@org_golang_x_text//message/pipeline:pipeline",
        "@org_golang_x_tools//cmd/bundle:bundle",
        "@org_golang_x_tools//cmd/callgraph:callgraph",
        "@org_golang_x_tools//cmd/file2fuzz:file2fuzz",
        "@org_golang_x_tools//cmd/fiximports:fiximports",
        "@org_golang_x_tools//cmd/gonew:gonew",
        "@org_golang_x_tools//cmd/gorename:gorename",
        "@org_golang_x_tools//cmd/signature-fuzzer/fuzz-driver:fuzz-driver",
        "@org_golang_x_tools//cmd/signature-fuzzer/fuzz-runner:fuzz-runner",
        "@org_golang_x_tools//cmd/stringer:stringer",
        "@org_golang_x_tools//container/intsets:intsets",
        "@org_golang_x_tools//copyright:copyright",
        "@org_golang_x_tools//go/analysis/analysistest:analysistest",
        "@org_golang_x_tools//go/analysis/multichecker:multichecker",
        "@org_golang_x_tools//go/analysis/passes/asmdecl:asmdecl",
        "@org_golang_x_tools//go/analysis/passes/appends:appends",
        "@org_golang_x_tools//go/analysis/passes/assign:assign",
        "@org_golang_x_tools//go/analysis/passes/atomic:atomic",
        "@org_golang_x_tools//go/analysis/passes/atomicalign:atomicalign",
        "@org_golang_x_tools//go/analysis/passes/bools:bools",
        "@org_golang_x_tools//go/analysis/passes/buildssa:buildssa",
        "@org_golang_x_tools//go/analysis/passes/buildtag:buildtag",
        "@org_golang_x_tools//go/analysis/passes/cgocall:cgocall",
        "@org_golang_x_tools//go/analysis/passes/composite:composite",
        "@org_golang_x_tools//go/analysis/passes/copylock:copylock",
        "@org_golang_x_tools//go/analysis/passes/ctrlflow:ctrlflow",
        "@org_golang_x_tools//go/analysis/passes/deepequalerrors:deepequalerrors",
        "@org_golang_x_tools//go/analysis/passes/defers:defers",
        "@org_golang_x_tools//go/analysis/passes/directive:directive",
        "@org_golang_x_tools//go/analysis/passes/errorsas:errorsas",
        "@org_golang_x_tools//go/analysis/passes/fieldalignment:fieldalignment",
        "@org_golang_x_tools//go/analysis/passes/findcall:findcall",
        "@org_golang_x_tools//go/analysis/passes/framepointer:framepointer",
        "@org_golang_x_tools//go/analysis/passes/httpmux:httpmux",
        "@org_golang_x_tools//go/analysis/passes/httpresponse:httpresponse",
        "@org_golang_x_tools//go/analysis/passes/ifaceassert:ifaceassert",
        "@org_golang_x_tools//go/analysis/passes/loopclosure:loopclosure",
        "@org_golang_x_tools//go/analysis/passes/lostcancel:lostcancel",
        "@org_golang_x_tools//go/analysis/passes/nilfunc:nilfunc",
        "@org_golang_x_tools//go/analysis/passes/nilness:nilness",
        "@org_golang_x_tools//go/analysis/passes/pkgfact:pkgfact",
        "@org_golang_x_tools//go/analysis/passes/printf:printf",
        "@org_golang_x_tools//go/analysis/passes/reflectvaluecompare:reflectvaluecompare",
        "@org_golang_x_tools//go/analysis/passes/shadow:shadow",
        "@org_golang_x_tools//go/analysis/passes/shift:shift",
        "@org_golang_x_tools//go/analysis/passes/sigchanyzer:sigchanyzer",
        "@org_golang_x_tools//go/analysis/passes/slog:slog",
        "@org_golang_x_tools//go/analysis/passes/sortslice:sortslice",
        "@org_golang_x_tools//go/analysis/passes/stdmethods:stdmethods",
        "@org_golang_x_tools//go/analysis/passes/stdversion:stdversion",
        "@org_golang_x_tools//go/analysis/passes/stringintconv:stringintconv",
        "@org_golang_x_tools//go/analysis/passes/structtag:structtag",
        "@org_golang_x_tools//go/analysis/passes/testinggoroutine:testinggoroutine",
        "@org_golang_x_tools//go/analysis/passes/tests:tests",
        "@org_golang_x_tools//go/analysis/passes/unmarshal:unmarshal",
        "@org_golang_x_tools//go/analysis/passes/unreachable:unreachable",
        "@org_golang_x_tools//go/analysis/passes/unsafeptr:unsafeptr",
        "@org_golang_x_tools//go/analysis/passes/unusedresult:unusedresult",
        "@org_golang_x_tools//go/analysis/passes/unusedwrite:unusedwrite",
        "@org_golang_x_tools//go/analysis/passes/timeformat:timeformat",
        "@org_golang_x_tools//go/analysis/passes/usesgenerics:usesgenerics",
        "@org_golang_x_tools//go/analysis/unitchecker:unitchecker",
        "@org_golang_x_tools//go/ast/inspector:inspector",
        "@org_golang_x_tools//go/buildutil:buildutil",
        "@org_golang_x_tools//go/callgraph/cha:cha",
        "@org_golang_x_tools//go/callgraph/rta:rta",
        "@org_golang_x_tools//go/callgraph/vta:vta",
        "@org_golang_x_tools//go/cfg:cfg",
        "@org_golang_x_tools//go/expect:expect",
        "@org_golang_x_tools//go/gccgoexportdata:gccgoexportdata",
        "@org_golang_x_tools//go/gcexportdata:gcexportdata",
        "@org_golang_x_tools//go/loader:loader",
        "@org_golang_x_tools//go/packages/packagestest/testdata:testdata",
        "@org_golang_x_tools//go/packages/packagestest:packagestest",
        "@org_golang_x_tools//go/packages:packages",
        "@org_golang_x_tools//go/ssa/interp:interp",
        "@org_golang_x_tools//go/ssa/ssautil:ssautil",
        "@org_golang_x_tools//go/ssa:ssa",
        "@org_golang_x_tools//go/types/typeutil:typeutil",
        "@org_golang_x_tools//go/types/objectpath:objectpath",
        "@org_golang_x_tools//godoc/static:static",
        "@org_golang_x_tools//godoc/vfs/zipfs:zipfs",
        "@org_golang_x_tools//refactor/eg:eg",
        "@org_golang_x_tools//refactor/importgraph:importgraph",
        "@org_golang_x_tools//refactor/rename:rename",
        "@org_golang_x_mod//sumdb/tlog:tlog",
        "@org_golang_x_mod//zip:zip",
    ],
)
