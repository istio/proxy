// Copyright 2016 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////////////////////////////////////////////////////////////////////////
//
// Test proto for transcoding
syntax = "proto3";
package google.grpc.transcoding.perf_benchmark;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

service Benchmark {
  rpc BytesPayloadBM(BytesPayload) returns (BytesPayload) {
    option (google.api.http) = {
      post: "/payload/bytes",
      body: "*"
    };
  }
  rpc StringPayloadBM(StringPayload) returns (StringPayload) {
    option (google.api.http) = {
      post: "/payload/string",
      body: "*"
    };
  }
  rpc Int32ArrayPayloadBM(Int32ArrayPayload) returns (Int32ArrayPayload) {
    option (google.api.http) = {
      post: "/payload/int32_array",
      body: "*"
    };
  }
  rpc DoubleArrayPayloadBM(DoubleArrayPayload) returns (DoubleArrayPayload) {
    option (google.api.http) = {
      post: "/payload/double_array",
      body: "*"
    };
  }
  rpc StringArrayPayloadBM(StringArrayPayload) returns (StringArrayPayload) {
    option (google.api.http) = {
      post: "/payload/string_array",
      body: "*"
    };
  }
  rpc NestedPayloadBM(NestedPayload) returns (NestedPayload) {
    option (google.api.http) = {
      post: "/payload/nested",
      body: "*"
    };
  }
  rpc StructPayloadBM(google.protobuf.Struct) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/payload/struct",
      body: "*"
    };
  }
  rpc MultiStringFieldPayloadBM(MultiStringFieldPayload)
      returns (MultiStringFieldPayload) {
    option (google.api.http) = {
      post: "/payload/multi_string_field",
      body: "*"
    };
  }
}

message BytesPayload {
  optional bytes payload = 1;
}

message StringPayload {
  optional string payload = 1;
}

message Int32ArrayPayload {
  repeated int32 payload = 1;
}

message DoubleArrayPayload {
  repeated double payload = 1;
}

message StringArrayPayload {
  repeated string payload = 1;
}

message NestedPayload {
  optional NestedPayload nested = 1;
  optional string payload = 2;
}

message MultiStringFieldPayload {
  optional string f1 = 1;
  optional string f2 = 2;
  optional string f3 = 3;
  optional string f4 = 4;
  optional string f5 = 5;
  optional string f6 = 6;
  optional string f7 = 7;
  optional string f8 = 8;
}
