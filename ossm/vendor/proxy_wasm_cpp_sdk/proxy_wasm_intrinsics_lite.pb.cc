// Copyright 2016-2019 Envoy Project Authors
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy_wasm_intrinsics_lite.proto

#include "proxy_wasm_intrinsics_lite.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataSource_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_EnvoyGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_GrpcService_GoogleGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_GrpcService_GoogleGrpc_CallCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_GoogleGrpc_CallCredentials_StsService_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_GrpcService_GoogleGrpc_ChannelCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_GoogleGrpc_Empty_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_GoogleGrpc_GoogleLocalCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GrpcService_GoogleGrpc_SslCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proxy_5fwasm_5fintrinsics_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_HeaderValue_proxy_5fwasm_5fintrinsics_5flite_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_struct_5flite_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListValue_struct_5flite_2eproto;
class WKTDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WKT> _instance;
} _WKT_default_instance_;
class DataSourceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataSource> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr inline_bytes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr inline_string_;
} _DataSource_default_instance_;
class AnyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Any> _instance;
} _Any_default_instance_;
class GrpcService_EnvoyGrpcDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService_EnvoyGrpc> _instance;
} _GrpcService_EnvoyGrpc_default_instance_;
class GrpcService_GoogleGrpc_SslCredentialsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService_GoogleGrpc_SslCredentials> _instance;
} _GrpcService_GoogleGrpc_SslCredentials_default_instance_;
class GrpcService_GoogleGrpc_GoogleLocalCredentialsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService_GoogleGrpc_GoogleLocalCredentials> _instance;
} _GrpcService_GoogleGrpc_GoogleLocalCredentials_default_instance_;
class GrpcService_GoogleGrpc_EmptyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService_GoogleGrpc_Empty> _instance;
} _GrpcService_GoogleGrpc_Empty_default_instance_;
class GrpcService_GoogleGrpc_ChannelCredentialsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService_GoogleGrpc_ChannelCredentials> _instance;
  const ::GrpcService_GoogleGrpc_SslCredentials* ssl_credentials_;
  const ::GrpcService_GoogleGrpc_Empty* google_default_;
  const ::GrpcService_GoogleGrpc_GoogleLocalCredentials* local_credentials_;
} _GrpcService_GoogleGrpc_ChannelCredentials_default_instance_;
class GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentialsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials> _instance;
} _GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials_default_instance_;
class GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentialsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials> _instance;
} _GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials_default_instance_;
class GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPluginDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin> _instance;
  const ::google::protobuf::Struct* config_;
  const ::Any* typed_config_;
} _GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin_default_instance_;
class GrpcService_GoogleGrpc_CallCredentials_StsServiceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService_GoogleGrpc_CallCredentials_StsService> _instance;
} _GrpcService_GoogleGrpc_CallCredentials_StsService_default_instance_;
class GrpcService_GoogleGrpc_CallCredentialsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService_GoogleGrpc_CallCredentials> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr access_token_;
  const ::GrpcService_GoogleGrpc_Empty* google_compute_engine_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr google_refresh_token_;
  const ::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials* service_account_jwt_access_;
  const ::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials* google_iam_;
  const ::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin* from_plugin_;
  const ::GrpcService_GoogleGrpc_CallCredentials_StsService* sts_service_;
} _GrpcService_GoogleGrpc_CallCredentials_default_instance_;
class GrpcService_GoogleGrpcDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService_GoogleGrpc> _instance;
} _GrpcService_GoogleGrpc_default_instance_;
class GrpcService_HeaderValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService_HeaderValue> _instance;
} _GrpcService_HeaderValue_default_instance_;
class GrpcServiceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrpcService> _instance;
  const ::GrpcService_EnvoyGrpc* envoy_grpc_;
  const ::GrpcService_GoogleGrpc* google_grpc_;
} _GrpcService_default_instance_;
static void InitDefaultsscc_info_Any_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Any_default_instance_;
    new (ptr) ::Any();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Any::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_Any_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {}};

static void InitDefaultsscc_info_DataSource_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DataSource_default_instance_;
    new (ptr) ::DataSource();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataSource::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataSource_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_DataSource_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {}};

static void InitDefaultsscc_info_GrpcService_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_default_instance_;
    new (ptr) ::GrpcService();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_GrpcService_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_GrpcService_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {
      &scc_info_GrpcService_EnvoyGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,
      &scc_info_GrpcService_GoogleGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,
      &scc_info_GrpcService_HeaderValue_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,}};

static void InitDefaultsscc_info_GrpcService_EnvoyGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_EnvoyGrpc_default_instance_;
    new (ptr) ::GrpcService_EnvoyGrpc();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService_EnvoyGrpc::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_EnvoyGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GrpcService_EnvoyGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {}};

static void InitDefaultsscc_info_GrpcService_GoogleGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_GoogleGrpc_default_instance_;
    new (ptr) ::GrpcService_GoogleGrpc();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService_GoogleGrpc::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_GrpcService_GoogleGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_GrpcService_GoogleGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {
      &scc_info_GrpcService_GoogleGrpc_ChannelCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,
      &scc_info_GrpcService_GoogleGrpc_CallCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,
      &scc_info_ListValue_struct_5flite_2eproto.base,}};

static void InitDefaultsscc_info_GrpcService_GoogleGrpc_CallCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_GoogleGrpc_CallCredentials_default_instance_;
    new (ptr) ::GrpcService_GoogleGrpc_CallCredentials();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService_GoogleGrpc_CallCredentials::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_GrpcService_GoogleGrpc_CallCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsscc_info_GrpcService_GoogleGrpc_CallCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {
      &scc_info_GrpcService_GoogleGrpc_Empty_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,
      &scc_info_GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,
      &scc_info_GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,
      &scc_info_GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,
      &scc_info_GrpcService_GoogleGrpc_CallCredentials_StsService_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,}};

static void InitDefaultsscc_info_GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials_default_instance_;
    new (ptr) ::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {}};

static void InitDefaultsscc_info_GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin_default_instance_;
    new (ptr) ::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {
      &scc_info_ListValue_struct_5flite_2eproto.base,
      &scc_info_Any_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,}};

static void InitDefaultsscc_info_GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials_default_instance_;
    new (ptr) ::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {}};

static void InitDefaultsscc_info_GrpcService_GoogleGrpc_CallCredentials_StsService_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_GoogleGrpc_CallCredentials_StsService_default_instance_;
    new (ptr) ::GrpcService_GoogleGrpc_CallCredentials_StsService();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService_GoogleGrpc_CallCredentials_StsService::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_GoogleGrpc_CallCredentials_StsService_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GrpcService_GoogleGrpc_CallCredentials_StsService_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {}};

static void InitDefaultsscc_info_GrpcService_GoogleGrpc_ChannelCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_GoogleGrpc_ChannelCredentials_default_instance_;
    new (ptr) ::GrpcService_GoogleGrpc_ChannelCredentials();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService_GoogleGrpc_ChannelCredentials::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_GrpcService_GoogleGrpc_ChannelCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_GrpcService_GoogleGrpc_ChannelCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {
      &scc_info_GrpcService_GoogleGrpc_SslCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,
      &scc_info_GrpcService_GoogleGrpc_Empty_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,
      &scc_info_GrpcService_GoogleGrpc_GoogleLocalCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,}};

static void InitDefaultsscc_info_GrpcService_GoogleGrpc_Empty_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_GoogleGrpc_Empty_default_instance_;
    new (ptr) ::GrpcService_GoogleGrpc_Empty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService_GoogleGrpc_Empty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_GoogleGrpc_Empty_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GrpcService_GoogleGrpc_Empty_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {}};

static void InitDefaultsscc_info_GrpcService_GoogleGrpc_GoogleLocalCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_GoogleGrpc_GoogleLocalCredentials_default_instance_;
    new (ptr) ::GrpcService_GoogleGrpc_GoogleLocalCredentials();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService_GoogleGrpc_GoogleLocalCredentials::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_GoogleGrpc_GoogleLocalCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GrpcService_GoogleGrpc_GoogleLocalCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {}};

static void InitDefaultsscc_info_GrpcService_GoogleGrpc_SslCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_GoogleGrpc_SslCredentials_default_instance_;
    new (ptr) ::GrpcService_GoogleGrpc_SslCredentials();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService_GoogleGrpc_SslCredentials::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GrpcService_GoogleGrpc_SslCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_GrpcService_GoogleGrpc_SslCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {
      &scc_info_DataSource_proxy_5fwasm_5fintrinsics_5flite_2eproto.base,}};

static void InitDefaultsscc_info_GrpcService_HeaderValue_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GrpcService_HeaderValue_default_instance_;
    new (ptr) ::GrpcService_HeaderValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GrpcService_HeaderValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrpcService_HeaderValue_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GrpcService_HeaderValue_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {}};

static void InitDefaultsscc_info_WKT_proxy_5fwasm_5fintrinsics_5flite_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WKT_default_instance_;
    new (ptr) ::WKT();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WKT::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WKT_proxy_5fwasm_5fintrinsics_5flite_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_WKT_proxy_5fwasm_5fintrinsics_5flite_2eproto}, {
      &scc_info_ListValue_struct_5flite_2eproto.base,}};


// ===================================================================

void WKT::InitAsDefaultInstance() {
  ::_WKT_default_instance_._instance.get_mutable()->struct__ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
class WKT::_Internal {
 public:
  static const ::google::protobuf::Struct& struct_(const WKT* msg);
};

const ::google::protobuf::Struct&
WKT::_Internal::struct_(const WKT* msg) {
  return *msg->struct__;
}
void WKT::clear_struct_() {
  if (GetArenaNoVirtual() == nullptr && struct__ != nullptr) {
    delete struct__;
  }
  struct__ = nullptr;
}
WKT::WKT()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WKT)
}
WKT::WKT(const WKT& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_struct_()) {
    struct__ = new ::google::protobuf::Struct(*from.struct__);
  } else {
    struct__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:WKT)
}

void WKT::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WKT_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  struct__ = nullptr;
}

WKT::~WKT() {
  // @@protoc_insertion_point(destructor:WKT)
  SharedDtor();
}

void WKT::SharedDtor() {
  if (this != internal_default_instance()) delete struct__;
}

void WKT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WKT& WKT::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WKT_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void WKT::Clear() {
// @@protoc_insertion_point(message_clear_start:WKT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && struct__ != nullptr) {
    delete struct__;
  }
  struct__ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WKT::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Struct struct = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_struct_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WKT::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:WKT)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Struct struct = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WKT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WKT)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WKT::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WKT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct struct = 1;
  if (this->has_struct_()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::struct_(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:WKT)
}

size_t WKT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WKT)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Struct struct = 1;
  if (this->has_struct_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *struct__);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WKT::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const WKT*>(
      &from));
}

void WKT::MergeFrom(const WKT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WKT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_struct_()) {
    mutable_struct_()->::google::protobuf::Struct::MergeFrom(from.struct_());
  }
}

void WKT::CopyFrom(const WKT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WKT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WKT::IsInitialized() const {
  return true;
}

void WKT::InternalSwap(WKT* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(struct__, other->struct__);
}

std::string WKT::GetTypeName() const {
  return "WKT";
}


// ===================================================================

void DataSource::InitAsDefaultInstance() {
}
class DataSource::_Internal {
 public:
};

DataSource::DataSource()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataSource)
}
DataSource::DataSource(const DataSource& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_specifier();
  switch (from.specifier_case()) {
    case kFilename: {
      set_filename(from.filename());
      break;
    }
    case kInlineBytes: {
      set_inline_bytes(from.inline_bytes());
      break;
    }
    case kInlineString: {
      set_inline_string(from.inline_string());
      break;
    }
    case SPECIFIER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:DataSource)
}

void DataSource::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataSource_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  clear_has_specifier();
}

DataSource::~DataSource() {
  // @@protoc_insertion_point(destructor:DataSource)
  SharedDtor();
}

void DataSource::SharedDtor() {
  if (has_specifier()) {
    clear_specifier();
  }
}

void DataSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataSource& DataSource::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataSource_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void DataSource::clear_specifier() {
// @@protoc_insertion_point(one_of_clear_start:DataSource)
  switch (specifier_case()) {
    case kFilename: {
      specifier_.filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kInlineBytes: {
      specifier_.inline_bytes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kInlineString: {
      specifier_.inline_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case SPECIFIER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SPECIFIER_NOT_SET;
}


void DataSource::Clear() {
// @@protoc_insertion_point(message_clear_start:DataSource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_specifier();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DataSource::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string filename = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_filename(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes inline_bytes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_inline_bytes(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string inline_string = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_inline_string(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DataSource::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:DataSource)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filename = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "DataSource.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes inline_bytes = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_inline_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string inline_string = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_inline_string()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->inline_string().data(), static_cast<int>(this->inline_string().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "DataSource.inline_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataSource)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DataSource::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataSource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filename = 1;
  if (has_filename()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DataSource.filename");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // bytes inline_bytes = 2;
  if (has_inline_bytes()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->inline_bytes(), output);
  }

  // string inline_string = 3;
  if (has_inline_string()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->inline_string().data(), static_cast<int>(this->inline_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DataSource.inline_string");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->inline_string(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:DataSource)
}

size_t DataSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataSource)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (specifier_case()) {
    // string filename = 1;
    case kFilename: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->filename());
      break;
    }
    // bytes inline_bytes = 2;
    case kInlineBytes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->inline_bytes());
      break;
    }
    // string inline_string = 3;
    case kInlineString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->inline_string());
      break;
    }
    case SPECIFIER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataSource::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const DataSource*>(
      &from));
}

void DataSource::MergeFrom(const DataSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.specifier_case()) {
    case kFilename: {
      set_filename(from.filename());
      break;
    }
    case kInlineBytes: {
      set_inline_bytes(from.inline_bytes());
      break;
    }
    case kInlineString: {
      set_inline_string(from.inline_string());
      break;
    }
    case SPECIFIER_NOT_SET: {
      break;
    }
  }
}

void DataSource::CopyFrom(const DataSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataSource::IsInitialized() const {
  return true;
}

void DataSource::InternalSwap(DataSource* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(specifier_, other->specifier_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

std::string DataSource::GetTypeName() const {
  return "DataSource";
}


// ===================================================================

void Any::InitAsDefaultInstance() {
}
class Any::_Internal {
 public:
};

Any::Any()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Any)
}
Any::Any(const Any& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.type_url().empty()) {
    type_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.type_url_);
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:Any)
}

void Any::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Any_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  type_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Any::~Any() {
  // @@protoc_insertion_point(destructor:Any)
  SharedDtor();
}

void Any::SharedDtor() {
  type_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Any::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Any& Any::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Any_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void Any::Clear() {
// @@protoc_insertion_point(message_clear_start:Any)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_url_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Any::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string type_url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_type_url(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_value(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Any::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Any)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_url = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_type_url()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->type_url().data(), static_cast<int>(this->type_url().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "Any.type_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Any)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Any)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Any::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Any)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_url = 1;
  if (this->type_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->type_url().data(), static_cast<int>(this->type_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Any.type_url");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_url(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:Any)
}

size_t Any::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Any)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type_url = 1;
  if (this->type_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->type_url());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Any::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const Any*>(
      &from));
}

void Any::MergeFrom(const Any& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Any)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_url().size() > 0) {

    type_url_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.type_url_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Any::CopyFrom(const Any& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Any)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Any::IsInitialized() const {
  return true;
}

void Any::InternalSwap(Any* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  type_url_.Swap(&other->type_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string Any::GetTypeName() const {
  return "Any";
}


// ===================================================================

void GrpcService_EnvoyGrpc::InitAsDefaultInstance() {
}
class GrpcService_EnvoyGrpc::_Internal {
 public:
};

GrpcService_EnvoyGrpc::GrpcService_EnvoyGrpc()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService.EnvoyGrpc)
}
GrpcService_EnvoyGrpc::GrpcService_EnvoyGrpc(const GrpcService_EnvoyGrpc& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.cluster_name().empty()) {
    cluster_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  // @@protoc_insertion_point(copy_constructor:GrpcService.EnvoyGrpc)
}

void GrpcService_EnvoyGrpc::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GrpcService_EnvoyGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  cluster_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GrpcService_EnvoyGrpc::~GrpcService_EnvoyGrpc() {
  // @@protoc_insertion_point(destructor:GrpcService.EnvoyGrpc)
  SharedDtor();
}

void GrpcService_EnvoyGrpc::SharedDtor() {
  cluster_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GrpcService_EnvoyGrpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService_EnvoyGrpc& GrpcService_EnvoyGrpc::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_EnvoyGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService_EnvoyGrpc::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.EnvoyGrpc)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService_EnvoyGrpc::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string cluster_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_cluster_name(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService_EnvoyGrpc::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService.EnvoyGrpc)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.EnvoyGrpc.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService.EnvoyGrpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService.EnvoyGrpc)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService_EnvoyGrpc::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService.EnvoyGrpc)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.EnvoyGrpc.cluster_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cluster_name(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService.EnvoyGrpc)
}

size_t GrpcService_EnvoyGrpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.EnvoyGrpc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cluster_name = 1;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService_EnvoyGrpc::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService_EnvoyGrpc*>(
      &from));
}

void GrpcService_EnvoyGrpc::MergeFrom(const GrpcService_EnvoyGrpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.EnvoyGrpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
}

void GrpcService_EnvoyGrpc::CopyFrom(const GrpcService_EnvoyGrpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.EnvoyGrpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService_EnvoyGrpc::IsInitialized() const {
  return true;
}

void GrpcService_EnvoyGrpc::InternalSwap(GrpcService_EnvoyGrpc* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  cluster_name_.Swap(&other->cluster_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string GrpcService_EnvoyGrpc::GetTypeName() const {
  return "GrpcService.EnvoyGrpc";
}


// ===================================================================

void GrpcService_GoogleGrpc_SslCredentials::InitAsDefaultInstance() {
  ::_GrpcService_GoogleGrpc_SslCredentials_default_instance_._instance.get_mutable()->root_certs_ = const_cast< ::DataSource*>(
      ::DataSource::internal_default_instance());
  ::_GrpcService_GoogleGrpc_SslCredentials_default_instance_._instance.get_mutable()->private_key_ = const_cast< ::DataSource*>(
      ::DataSource::internal_default_instance());
  ::_GrpcService_GoogleGrpc_SslCredentials_default_instance_._instance.get_mutable()->cert_chain_ = const_cast< ::DataSource*>(
      ::DataSource::internal_default_instance());
}
class GrpcService_GoogleGrpc_SslCredentials::_Internal {
 public:
  static const ::DataSource& root_certs(const GrpcService_GoogleGrpc_SslCredentials* msg);
  static const ::DataSource& private_key(const GrpcService_GoogleGrpc_SslCredentials* msg);
  static const ::DataSource& cert_chain(const GrpcService_GoogleGrpc_SslCredentials* msg);
};

const ::DataSource&
GrpcService_GoogleGrpc_SslCredentials::_Internal::root_certs(const GrpcService_GoogleGrpc_SslCredentials* msg) {
  return *msg->root_certs_;
}
const ::DataSource&
GrpcService_GoogleGrpc_SslCredentials::_Internal::private_key(const GrpcService_GoogleGrpc_SslCredentials* msg) {
  return *msg->private_key_;
}
const ::DataSource&
GrpcService_GoogleGrpc_SslCredentials::_Internal::cert_chain(const GrpcService_GoogleGrpc_SslCredentials* msg) {
  return *msg->cert_chain_;
}
GrpcService_GoogleGrpc_SslCredentials::GrpcService_GoogleGrpc_SslCredentials()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService.GoogleGrpc.SslCredentials)
}
GrpcService_GoogleGrpc_SslCredentials::GrpcService_GoogleGrpc_SslCredentials(const GrpcService_GoogleGrpc_SslCredentials& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_root_certs()) {
    root_certs_ = new ::DataSource(*from.root_certs_);
  } else {
    root_certs_ = nullptr;
  }
  if (from.has_private_key()) {
    private_key_ = new ::DataSource(*from.private_key_);
  } else {
    private_key_ = nullptr;
  }
  if (from.has_cert_chain()) {
    cert_chain_ = new ::DataSource(*from.cert_chain_);
  } else {
    cert_chain_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.SslCredentials)
}

void GrpcService_GoogleGrpc_SslCredentials::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GrpcService_GoogleGrpc_SslCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  ::memset(&root_certs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cert_chain_) -
      reinterpret_cast<char*>(&root_certs_)) + sizeof(cert_chain_));
}

GrpcService_GoogleGrpc_SslCredentials::~GrpcService_GoogleGrpc_SslCredentials() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.SslCredentials)
  SharedDtor();
}

void GrpcService_GoogleGrpc_SslCredentials::SharedDtor() {
  if (this != internal_default_instance()) delete root_certs_;
  if (this != internal_default_instance()) delete private_key_;
  if (this != internal_default_instance()) delete cert_chain_;
}

void GrpcService_GoogleGrpc_SslCredentials::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService_GoogleGrpc_SslCredentials& GrpcService_GoogleGrpc_SslCredentials::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_GoogleGrpc_SslCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService_GoogleGrpc_SslCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.SslCredentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && root_certs_ != nullptr) {
    delete root_certs_;
  }
  root_certs_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && private_key_ != nullptr) {
    delete private_key_;
  }
  private_key_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && cert_chain_ != nullptr) {
    delete cert_chain_;
  }
  cert_chain_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService_GoogleGrpc_SslCredentials::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .DataSource root_certs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_root_certs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DataSource private_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_private_key(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .DataSource cert_chain = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_cert_chain(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService_GoogleGrpc_SslCredentials::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService.GoogleGrpc.SslCredentials)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .DataSource root_certs = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_root_certs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DataSource private_key = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_private_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DataSource cert_chain = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_cert_chain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService.GoogleGrpc.SslCredentials)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService.GoogleGrpc.SslCredentials)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService_GoogleGrpc_SslCredentials::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService.GoogleGrpc.SslCredentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .DataSource root_certs = 1;
  if (this->has_root_certs()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::root_certs(this), output);
  }

  // .DataSource private_key = 2;
  if (this->has_private_key()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::private_key(this), output);
  }

  // .DataSource cert_chain = 3;
  if (this->has_cert_chain()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3, _Internal::cert_chain(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService.GoogleGrpc.SslCredentials)
}

size_t GrpcService_GoogleGrpc_SslCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.SslCredentials)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .DataSource root_certs = 1;
  if (this->has_root_certs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *root_certs_);
  }

  // .DataSource private_key = 2;
  if (this->has_private_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *private_key_);
  }

  // .DataSource cert_chain = 3;
  if (this->has_cert_chain()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cert_chain_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService_GoogleGrpc_SslCredentials::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService_GoogleGrpc_SslCredentials*>(
      &from));
}

void GrpcService_GoogleGrpc_SslCredentials::MergeFrom(const GrpcService_GoogleGrpc_SslCredentials& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.SslCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_root_certs()) {
    mutable_root_certs()->::DataSource::MergeFrom(from.root_certs());
  }
  if (from.has_private_key()) {
    mutable_private_key()->::DataSource::MergeFrom(from.private_key());
  }
  if (from.has_cert_chain()) {
    mutable_cert_chain()->::DataSource::MergeFrom(from.cert_chain());
  }
}

void GrpcService_GoogleGrpc_SslCredentials::CopyFrom(const GrpcService_GoogleGrpc_SslCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.SslCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService_GoogleGrpc_SslCredentials::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_SslCredentials::InternalSwap(GrpcService_GoogleGrpc_SslCredentials* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(root_certs_, other->root_certs_);
  swap(private_key_, other->private_key_);
  swap(cert_chain_, other->cert_chain_);
}

std::string GrpcService_GoogleGrpc_SslCredentials::GetTypeName() const {
  return "GrpcService.GoogleGrpc.SslCredentials";
}


// ===================================================================

void GrpcService_GoogleGrpc_GoogleLocalCredentials::InitAsDefaultInstance() {
}
class GrpcService_GoogleGrpc_GoogleLocalCredentials::_Internal {
 public:
};

GrpcService_GoogleGrpc_GoogleLocalCredentials::GrpcService_GoogleGrpc_GoogleLocalCredentials()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService.GoogleGrpc.GoogleLocalCredentials)
}
GrpcService_GoogleGrpc_GoogleLocalCredentials::GrpcService_GoogleGrpc_GoogleLocalCredentials(const GrpcService_GoogleGrpc_GoogleLocalCredentials& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.GoogleLocalCredentials)
}

void GrpcService_GoogleGrpc_GoogleLocalCredentials::SharedCtor() {
}

GrpcService_GoogleGrpc_GoogleLocalCredentials::~GrpcService_GoogleGrpc_GoogleLocalCredentials() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  SharedDtor();
}

void GrpcService_GoogleGrpc_GoogleLocalCredentials::SharedDtor() {
}

void GrpcService_GoogleGrpc_GoogleLocalCredentials::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService_GoogleGrpc_GoogleLocalCredentials& GrpcService_GoogleGrpc_GoogleLocalCredentials::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_GoogleGrpc_GoogleLocalCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService_GoogleGrpc_GoogleLocalCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService_GoogleGrpc_GoogleLocalCredentials::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService_GoogleGrpc_GoogleLocalCredentials::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService_GoogleGrpc_GoogleLocalCredentials::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService.GoogleGrpc.GoogleLocalCredentials)
}

size_t GrpcService_GoogleGrpc_GoogleLocalCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService_GoogleGrpc_GoogleLocalCredentials::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService_GoogleGrpc_GoogleLocalCredentials*>(
      &from));
}

void GrpcService_GoogleGrpc_GoogleLocalCredentials::MergeFrom(const GrpcService_GoogleGrpc_GoogleLocalCredentials& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GrpcService_GoogleGrpc_GoogleLocalCredentials::CopyFrom(const GrpcService_GoogleGrpc_GoogleLocalCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.GoogleLocalCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService_GoogleGrpc_GoogleLocalCredentials::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_GoogleLocalCredentials::InternalSwap(GrpcService_GoogleGrpc_GoogleLocalCredentials* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

std::string GrpcService_GoogleGrpc_GoogleLocalCredentials::GetTypeName() const {
  return "GrpcService.GoogleGrpc.GoogleLocalCredentials";
}


// ===================================================================

void GrpcService_GoogleGrpc_Empty::InitAsDefaultInstance() {
}
class GrpcService_GoogleGrpc_Empty::_Internal {
 public:
};

GrpcService_GoogleGrpc_Empty::GrpcService_GoogleGrpc_Empty()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService.GoogleGrpc.Empty)
}
GrpcService_GoogleGrpc_Empty::GrpcService_GoogleGrpc_Empty(const GrpcService_GoogleGrpc_Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.Empty)
}

void GrpcService_GoogleGrpc_Empty::SharedCtor() {
}

GrpcService_GoogleGrpc_Empty::~GrpcService_GoogleGrpc_Empty() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.Empty)
  SharedDtor();
}

void GrpcService_GoogleGrpc_Empty::SharedDtor() {
}

void GrpcService_GoogleGrpc_Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService_GoogleGrpc_Empty& GrpcService_GoogleGrpc_Empty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_GoogleGrpc_Empty_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService_GoogleGrpc_Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService_GoogleGrpc_Empty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService_GoogleGrpc_Empty::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService.GoogleGrpc.Empty)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService.GoogleGrpc.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService.GoogleGrpc.Empty)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService_GoogleGrpc_Empty::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService.GoogleGrpc.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService.GoogleGrpc.Empty)
}

size_t GrpcService_GoogleGrpc_Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.Empty)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService_GoogleGrpc_Empty::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService_GoogleGrpc_Empty*>(
      &from));
}

void GrpcService_GoogleGrpc_Empty::MergeFrom(const GrpcService_GoogleGrpc_Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GrpcService_GoogleGrpc_Empty::CopyFrom(const GrpcService_GoogleGrpc_Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService_GoogleGrpc_Empty::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_Empty::InternalSwap(GrpcService_GoogleGrpc_Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

std::string GrpcService_GoogleGrpc_Empty::GetTypeName() const {
  return "GrpcService.GoogleGrpc.Empty";
}


// ===================================================================

void GrpcService_GoogleGrpc_ChannelCredentials::InitAsDefaultInstance() {
}
class GrpcService_GoogleGrpc_ChannelCredentials::_Internal {
 public:
  static const ::GrpcService_GoogleGrpc_SslCredentials& ssl_credentials(const GrpcService_GoogleGrpc_ChannelCredentials* msg);
  static const ::GrpcService_GoogleGrpc_Empty& google_default(const GrpcService_GoogleGrpc_ChannelCredentials* msg);
  static const ::GrpcService_GoogleGrpc_GoogleLocalCredentials& local_credentials(const GrpcService_GoogleGrpc_ChannelCredentials* msg);
};

const ::GrpcService_GoogleGrpc_SslCredentials&
GrpcService_GoogleGrpc_ChannelCredentials::_Internal::ssl_credentials(const GrpcService_GoogleGrpc_ChannelCredentials* msg) {
  return *msg->credential_specifier_.ssl_credentials_;
}
const ::GrpcService_GoogleGrpc_Empty&
GrpcService_GoogleGrpc_ChannelCredentials::_Internal::google_default(const GrpcService_GoogleGrpc_ChannelCredentials* msg) {
  return *msg->credential_specifier_.google_default_;
}
const ::GrpcService_GoogleGrpc_GoogleLocalCredentials&
GrpcService_GoogleGrpc_ChannelCredentials::_Internal::local_credentials(const GrpcService_GoogleGrpc_ChannelCredentials* msg) {
  return *msg->credential_specifier_.local_credentials_;
}
void GrpcService_GoogleGrpc_ChannelCredentials::set_allocated_ssl_credentials(::GrpcService_GoogleGrpc_SslCredentials* ssl_credentials) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_credential_specifier();
  if (ssl_credentials) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ssl_credentials = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ssl_credentials, submessage_arena);
    }
    set_has_ssl_credentials();
    credential_specifier_.ssl_credentials_ = ssl_credentials;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.ChannelCredentials.ssl_credentials)
}
void GrpcService_GoogleGrpc_ChannelCredentials::set_allocated_google_default(::GrpcService_GoogleGrpc_Empty* google_default) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_credential_specifier();
  if (google_default) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      google_default = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, google_default, submessage_arena);
    }
    set_has_google_default();
    credential_specifier_.google_default_ = google_default;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.ChannelCredentials.google_default)
}
void GrpcService_GoogleGrpc_ChannelCredentials::set_allocated_local_credentials(::GrpcService_GoogleGrpc_GoogleLocalCredentials* local_credentials) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_credential_specifier();
  if (local_credentials) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      local_credentials = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, local_credentials, submessage_arena);
    }
    set_has_local_credentials();
    credential_specifier_.local_credentials_ = local_credentials;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.ChannelCredentials.local_credentials)
}
GrpcService_GoogleGrpc_ChannelCredentials::GrpcService_GoogleGrpc_ChannelCredentials()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService.GoogleGrpc.ChannelCredentials)
}
GrpcService_GoogleGrpc_ChannelCredentials::GrpcService_GoogleGrpc_ChannelCredentials(const GrpcService_GoogleGrpc_ChannelCredentials& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_credential_specifier();
  switch (from.credential_specifier_case()) {
    case kSslCredentials: {
      mutable_ssl_credentials()->::GrpcService_GoogleGrpc_SslCredentials::MergeFrom(from.ssl_credentials());
      break;
    }
    case kGoogleDefault: {
      mutable_google_default()->::GrpcService_GoogleGrpc_Empty::MergeFrom(from.google_default());
      break;
    }
    case kLocalCredentials: {
      mutable_local_credentials()->::GrpcService_GoogleGrpc_GoogleLocalCredentials::MergeFrom(from.local_credentials());
      break;
    }
    case CREDENTIAL_SPECIFIER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.ChannelCredentials)
}

void GrpcService_GoogleGrpc_ChannelCredentials::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GrpcService_GoogleGrpc_ChannelCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  clear_has_credential_specifier();
}

GrpcService_GoogleGrpc_ChannelCredentials::~GrpcService_GoogleGrpc_ChannelCredentials() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.ChannelCredentials)
  SharedDtor();
}

void GrpcService_GoogleGrpc_ChannelCredentials::SharedDtor() {
  if (has_credential_specifier()) {
    clear_credential_specifier();
  }
}

void GrpcService_GoogleGrpc_ChannelCredentials::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService_GoogleGrpc_ChannelCredentials& GrpcService_GoogleGrpc_ChannelCredentials::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_GoogleGrpc_ChannelCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService_GoogleGrpc_ChannelCredentials::clear_credential_specifier() {
// @@protoc_insertion_point(one_of_clear_start:GrpcService.GoogleGrpc.ChannelCredentials)
  switch (credential_specifier_case()) {
    case kSslCredentials: {
      delete credential_specifier_.ssl_credentials_;
      break;
    }
    case kGoogleDefault: {
      delete credential_specifier_.google_default_;
      break;
    }
    case kLocalCredentials: {
      delete credential_specifier_.local_credentials_;
      break;
    }
    case CREDENTIAL_SPECIFIER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CREDENTIAL_SPECIFIER_NOT_SET;
}


void GrpcService_GoogleGrpc_ChannelCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.ChannelCredentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_credential_specifier();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService_GoogleGrpc_ChannelCredentials::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .GrpcService.GoogleGrpc.SslCredentials ssl_credentials = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_ssl_credentials(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .GrpcService.GoogleGrpc.Empty google_default = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_google_default(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .GrpcService.GoogleGrpc.GoogleLocalCredentials local_credentials = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_local_credentials(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService_GoogleGrpc_ChannelCredentials::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService.GoogleGrpc.ChannelCredentials)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GrpcService.GoogleGrpc.SslCredentials ssl_credentials = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_ssl_credentials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GrpcService.GoogleGrpc.Empty google_default = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_google_default()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GrpcService.GoogleGrpc.GoogleLocalCredentials local_credentials = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_local_credentials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService.GoogleGrpc.ChannelCredentials)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService.GoogleGrpc.ChannelCredentials)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService_GoogleGrpc_ChannelCredentials::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService.GoogleGrpc.ChannelCredentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GrpcService.GoogleGrpc.SslCredentials ssl_credentials = 1;
  if (has_ssl_credentials()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::ssl_credentials(this), output);
  }

  // .GrpcService.GoogleGrpc.Empty google_default = 2;
  if (has_google_default()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::google_default(this), output);
  }

  // .GrpcService.GoogleGrpc.GoogleLocalCredentials local_credentials = 3;
  if (has_local_credentials()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3, _Internal::local_credentials(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService.GoogleGrpc.ChannelCredentials)
}

size_t GrpcService_GoogleGrpc_ChannelCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.ChannelCredentials)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (credential_specifier_case()) {
    // .GrpcService.GoogleGrpc.SslCredentials ssl_credentials = 1;
    case kSslCredentials: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *credential_specifier_.ssl_credentials_);
      break;
    }
    // .GrpcService.GoogleGrpc.Empty google_default = 2;
    case kGoogleDefault: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *credential_specifier_.google_default_);
      break;
    }
    // .GrpcService.GoogleGrpc.GoogleLocalCredentials local_credentials = 3;
    case kLocalCredentials: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *credential_specifier_.local_credentials_);
      break;
    }
    case CREDENTIAL_SPECIFIER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService_GoogleGrpc_ChannelCredentials::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService_GoogleGrpc_ChannelCredentials*>(
      &from));
}

void GrpcService_GoogleGrpc_ChannelCredentials::MergeFrom(const GrpcService_GoogleGrpc_ChannelCredentials& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.ChannelCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.credential_specifier_case()) {
    case kSslCredentials: {
      mutable_ssl_credentials()->::GrpcService_GoogleGrpc_SslCredentials::MergeFrom(from.ssl_credentials());
      break;
    }
    case kGoogleDefault: {
      mutable_google_default()->::GrpcService_GoogleGrpc_Empty::MergeFrom(from.google_default());
      break;
    }
    case kLocalCredentials: {
      mutable_local_credentials()->::GrpcService_GoogleGrpc_GoogleLocalCredentials::MergeFrom(from.local_credentials());
      break;
    }
    case CREDENTIAL_SPECIFIER_NOT_SET: {
      break;
    }
  }
}

void GrpcService_GoogleGrpc_ChannelCredentials::CopyFrom(const GrpcService_GoogleGrpc_ChannelCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.ChannelCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService_GoogleGrpc_ChannelCredentials::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_ChannelCredentials::InternalSwap(GrpcService_GoogleGrpc_ChannelCredentials* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(credential_specifier_, other->credential_specifier_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

std::string GrpcService_GoogleGrpc_ChannelCredentials::GetTypeName() const {
  return "GrpcService.GoogleGrpc.ChannelCredentials";
}


// ===================================================================

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::InitAsDefaultInstance() {
}
class GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::_Internal {
 public:
};

GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
}
GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials(const GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  json_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.json_key().empty()) {
    json_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.json_key_);
  }
  token_lifetime_seconds_ = from.token_lifetime_seconds_;
  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
}

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  json_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_lifetime_seconds_ = PROTOBUF_ULONGLONG(0);
}

GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::~GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  SharedDtor();
}

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::SharedDtor() {
  json_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials& GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  json_key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_lifetime_seconds_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string json_key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_json_key(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 token_lifetime_seconds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          token_lifetime_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string json_key = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_json_key()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->json_key().data(), static_cast<int>(this->json_key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials.json_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 token_lifetime_seconds = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &token_lifetime_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string json_key = 1;
  if (this->json_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->json_key().data(), static_cast<int>(this->json_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials.json_key");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->json_key(), output);
  }

  // uint64 token_lifetime_seconds = 2;
  if (this->token_lifetime_seconds() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(2, this->token_lifetime_seconds(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
}

size_t GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string json_key = 1;
  if (this->json_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->json_key());
  }

  // uint64 token_lifetime_seconds = 2;
  if (this->token_lifetime_seconds() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->token_lifetime_seconds());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials*>(
      &from));
}

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::MergeFrom(const GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.json_key().size() > 0) {

    json_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.json_key_);
  }
  if (from.token_lifetime_seconds() != 0) {
    set_token_lifetime_seconds(from.token_lifetime_seconds());
  }
}

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::CopyFrom(const GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::InternalSwap(GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  json_key_.Swap(&other->json_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(token_lifetime_seconds_, other->token_lifetime_seconds_);
}

std::string GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::GetTypeName() const {
  return "GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials";
}


// ===================================================================

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::InitAsDefaultInstance() {
}
class GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::_Internal {
 public:
};

GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
}
GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials(const GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  authorization_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.authorization_token().empty()) {
    authorization_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.authorization_token_);
  }
  authority_selector_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.authority_selector().empty()) {
    authority_selector_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.authority_selector_);
  }
  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
}

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  authorization_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  authority_selector_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::~GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  SharedDtor();
}

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::SharedDtor() {
  authorization_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  authority_selector_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials& GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorization_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  authority_selector_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string authorization_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_authorization_token(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string authority_selector = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_authority_selector(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string authorization_token = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_authorization_token()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->authorization_token().data(), static_cast<int>(this->authorization_token().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials.authorization_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string authority_selector = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_authority_selector()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->authority_selector().data(), static_cast<int>(this->authority_selector().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials.authority_selector"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string authorization_token = 1;
  if (this->authorization_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->authorization_token().data(), static_cast<int>(this->authorization_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials.authorization_token");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->authorization_token(), output);
  }

  // string authority_selector = 2;
  if (this->authority_selector().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->authority_selector().data(), static_cast<int>(this->authority_selector().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials.authority_selector");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->authority_selector(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
}

size_t GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authorization_token = 1;
  if (this->authorization_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->authorization_token());
  }

  // string authority_selector = 2;
  if (this->authority_selector().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->authority_selector());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials*>(
      &from));
}

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::MergeFrom(const GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.authorization_token().size() > 0) {

    authorization_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.authorization_token_);
  }
  if (from.authority_selector().size() > 0) {

    authority_selector_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.authority_selector_);
  }
}

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::CopyFrom(const GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::InternalSwap(GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  authorization_token_.Swap(&other->authorization_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  authority_selector_.Swap(&other->authority_selector_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::GetTypeName() const {
  return "GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials";
}


// ===================================================================

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::InitAsDefaultInstance() {
}
class GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::_Internal {
 public:
  static const ::google::protobuf::Struct& config(const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin* msg);
  static const ::Any& typed_config(const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin* msg);
};

const ::google::protobuf::Struct&
GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::_Internal::config(const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin* msg) {
  return *msg->config_type_.config_;
}
const ::Any&
GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::_Internal::typed_config(const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin* msg) {
  return *msg->config_type_.typed_config_;
}
void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::set_allocated_config(::google::protobuf::Struct* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_config_type();
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config)->GetArena();
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    set_has_config();
    config_type_.config_ = config;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin.config)
}
void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::clear_config() {
  if (has_config()) {
    delete config_type_.config_;
    clear_has_config_type();
  }
}
void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::set_allocated_typed_config(::Any* typed_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_config_type();
  if (typed_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      typed_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, typed_config, submessage_arena);
    }
    set_has_typed_config();
    config_type_.typed_config_ = typed_config;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin.typed_config)
}
GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
}
GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin(const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_config_type();
  switch (from.config_type_case()) {
    case kConfig: {
      mutable_config()->::google::protobuf::Struct::MergeFrom(from.config());
      break;
    }
    case kTypedConfig: {
      mutable_typed_config()->::Any::MergeFrom(from.typed_config());
      break;
    }
    case CONFIG_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
}

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_config_type();
}

GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::~GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  SharedDtor();
}

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_config_type()) {
    clear_config_type();
  }
}

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin& GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::clear_config_type() {
// @@protoc_insertion_point(one_of_clear_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  switch (config_type_case()) {
    case kConfig: {
      delete config_type_.config_;
      break;
    }
    case kTypedConfig: {
      delete config_type_.typed_config_;
      break;
    }
    case CONFIG_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONFIG_TYPE_NOT_SET;
}


void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_config_type();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct config = 2 [deprecated = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Any typed_config = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_typed_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct config = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Any typed_config = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_typed_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.protobuf.Struct config = 2 [deprecated = true];
  if (has_config()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::config(this), output);
  }

  // .Any typed_config = 3;
  if (has_typed_config()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3, _Internal::typed_config(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
}

size_t GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (config_type_case()) {
    // .google.protobuf.Struct config = 2 [deprecated = true];
    case kConfig: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *config_type_.config_);
      break;
    }
    // .Any typed_config = 3;
    case kTypedConfig: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *config_type_.typed_config_);
      break;
    }
    case CONFIG_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin*>(
      &from));
}

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::MergeFrom(const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.config_type_case()) {
    case kConfig: {
      mutable_config()->::google::protobuf::Struct::MergeFrom(from.config());
      break;
    }
    case kTypedConfig: {
      mutable_typed_config()->::Any::MergeFrom(from.typed_config());
      break;
    }
    case CONFIG_TYPE_NOT_SET: {
      break;
    }
  }
}

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::CopyFrom(const GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::InternalSwap(GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(config_type_, other->config_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

std::string GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::GetTypeName() const {
  return "GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin";
}


// ===================================================================

void GrpcService_GoogleGrpc_CallCredentials_StsService::InitAsDefaultInstance() {
}
class GrpcService_GoogleGrpc_CallCredentials_StsService::_Internal {
 public:
};

GrpcService_GoogleGrpc_CallCredentials_StsService::GrpcService_GoogleGrpc_CallCredentials_StsService()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService.GoogleGrpc.CallCredentials.StsService)
}
GrpcService_GoogleGrpc_CallCredentials_StsService::GrpcService_GoogleGrpc_CallCredentials_StsService(const GrpcService_GoogleGrpc_CallCredentials_StsService& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_exchange_service_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.token_exchange_service_uri().empty()) {
    token_exchange_service_uri_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.token_exchange_service_uri_);
  }
  resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.resource().empty()) {
    resource_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  audience_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.audience().empty()) {
    audience_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.audience_);
  }
  scope_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.scope().empty()) {
    scope_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.scope_);
  }
  requested_token_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.requested_token_type().empty()) {
    requested_token_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.requested_token_type_);
  }
  subject_token_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.subject_token_path().empty()) {
    subject_token_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.subject_token_path_);
  }
  subject_token_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.subject_token_type().empty()) {
    subject_token_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.subject_token_type_);
  }
  actor_token_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.actor_token_path().empty()) {
    actor_token_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.actor_token_path_);
  }
  actor_token_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.actor_token_type().empty()) {
    actor_token_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.actor_token_type_);
  }
  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.CallCredentials.StsService)
}

void GrpcService_GoogleGrpc_CallCredentials_StsService::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GrpcService_GoogleGrpc_CallCredentials_StsService_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  token_exchange_service_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  audience_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scope_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requested_token_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subject_token_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subject_token_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_token_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_token_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GrpcService_GoogleGrpc_CallCredentials_StsService::~GrpcService_GoogleGrpc_CallCredentials_StsService() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.CallCredentials.StsService)
  SharedDtor();
}

void GrpcService_GoogleGrpc_CallCredentials_StsService::SharedDtor() {
  token_exchange_service_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  audience_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scope_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requested_token_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subject_token_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subject_token_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_token_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_token_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GrpcService_GoogleGrpc_CallCredentials_StsService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService_GoogleGrpc_CallCredentials_StsService& GrpcService_GoogleGrpc_CallCredentials_StsService::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_GoogleGrpc_CallCredentials_StsService_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService_GoogleGrpc_CallCredentials_StsService::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.CallCredentials.StsService)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_exchange_service_uri_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  audience_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scope_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requested_token_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subject_token_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subject_token_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_token_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  actor_token_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService_GoogleGrpc_CallCredentials_StsService::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token_exchange_service_uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_token_exchange_service_uri(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_resource(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string audience = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_audience(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string scope = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_scope(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requested_token_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_requested_token_type(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subject_token_path = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_subject_token_path(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subject_token_type = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_subject_token_type(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actor_token_path = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_actor_token_path(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string actor_token_type = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_actor_token_type(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService_GoogleGrpc_CallCredentials_StsService::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService.GoogleGrpc.CallCredentials.StsService)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token_exchange_service_uri = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_token_exchange_service_uri()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->token_exchange_service_uri().data(), static_cast<int>(this->token_exchange_service_uri().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.StsService.token_exchange_service_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resource = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_resource()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->resource().data(), static_cast<int>(this->resource().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.StsService.resource"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string audience = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_audience()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->audience().data(), static_cast<int>(this->audience().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.StsService.audience"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scope = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_scope()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->scope().data(), static_cast<int>(this->scope().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.StsService.scope"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string requested_token_type = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_requested_token_type()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->requested_token_type().data(), static_cast<int>(this->requested_token_type().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.StsService.requested_token_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subject_token_path = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_subject_token_path()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->subject_token_path().data(), static_cast<int>(this->subject_token_path().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.StsService.subject_token_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subject_token_type = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_subject_token_type()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->subject_token_type().data(), static_cast<int>(this->subject_token_type().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.StsService.subject_token_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string actor_token_path = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_actor_token_path()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->actor_token_path().data(), static_cast<int>(this->actor_token_path().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.StsService.actor_token_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string actor_token_type = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_actor_token_type()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->actor_token_type().data(), static_cast<int>(this->actor_token_type().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.StsService.actor_token_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService.GoogleGrpc.CallCredentials.StsService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService.GoogleGrpc.CallCredentials.StsService)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService_GoogleGrpc_CallCredentials_StsService::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService.GoogleGrpc.CallCredentials.StsService)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token_exchange_service_uri = 1;
  if (this->token_exchange_service_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->token_exchange_service_uri().data(), static_cast<int>(this->token_exchange_service_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.StsService.token_exchange_service_uri");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token_exchange_service_uri(), output);
  }

  // string resource = 2;
  if (this->resource().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->resource().data(), static_cast<int>(this->resource().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.StsService.resource");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resource(), output);
  }

  // string audience = 3;
  if (this->audience().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->audience().data(), static_cast<int>(this->audience().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.StsService.audience");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->audience(), output);
  }

  // string scope = 4;
  if (this->scope().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->scope().data(), static_cast<int>(this->scope().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.StsService.scope");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->scope(), output);
  }

  // string requested_token_type = 5;
  if (this->requested_token_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->requested_token_type().data(), static_cast<int>(this->requested_token_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.StsService.requested_token_type");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->requested_token_type(), output);
  }

  // string subject_token_path = 6;
  if (this->subject_token_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->subject_token_path().data(), static_cast<int>(this->subject_token_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.StsService.subject_token_path");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->subject_token_path(), output);
  }

  // string subject_token_type = 7;
  if (this->subject_token_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->subject_token_type().data(), static_cast<int>(this->subject_token_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.StsService.subject_token_type");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->subject_token_type(), output);
  }

  // string actor_token_path = 8;
  if (this->actor_token_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->actor_token_path().data(), static_cast<int>(this->actor_token_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.StsService.actor_token_path");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->actor_token_path(), output);
  }

  // string actor_token_type = 9;
  if (this->actor_token_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->actor_token_type().data(), static_cast<int>(this->actor_token_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.StsService.actor_token_type");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->actor_token_type(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService.GoogleGrpc.CallCredentials.StsService)
}

size_t GrpcService_GoogleGrpc_CallCredentials_StsService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.CallCredentials.StsService)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token_exchange_service_uri = 1;
  if (this->token_exchange_service_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->token_exchange_service_uri());
  }

  // string resource = 2;
  if (this->resource().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->resource());
  }

  // string audience = 3;
  if (this->audience().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->audience());
  }

  // string scope = 4;
  if (this->scope().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->scope());
  }

  // string requested_token_type = 5;
  if (this->requested_token_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->requested_token_type());
  }

  // string subject_token_path = 6;
  if (this->subject_token_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->subject_token_path());
  }

  // string subject_token_type = 7;
  if (this->subject_token_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->subject_token_type());
  }

  // string actor_token_path = 8;
  if (this->actor_token_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->actor_token_path());
  }

  // string actor_token_type = 9;
  if (this->actor_token_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->actor_token_type());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService_GoogleGrpc_CallCredentials_StsService::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService_GoogleGrpc_CallCredentials_StsService*>(
      &from));
}

void GrpcService_GoogleGrpc_CallCredentials_StsService::MergeFrom(const GrpcService_GoogleGrpc_CallCredentials_StsService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.CallCredentials.StsService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token_exchange_service_uri().size() > 0) {

    token_exchange_service_uri_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.token_exchange_service_uri_);
  }
  if (from.resource().size() > 0) {

    resource_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  if (from.audience().size() > 0) {

    audience_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.audience_);
  }
  if (from.scope().size() > 0) {

    scope_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.scope_);
  }
  if (from.requested_token_type().size() > 0) {

    requested_token_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.requested_token_type_);
  }
  if (from.subject_token_path().size() > 0) {

    subject_token_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.subject_token_path_);
  }
  if (from.subject_token_type().size() > 0) {

    subject_token_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.subject_token_type_);
  }
  if (from.actor_token_path().size() > 0) {

    actor_token_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.actor_token_path_);
  }
  if (from.actor_token_type().size() > 0) {

    actor_token_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.actor_token_type_);
  }
}

void GrpcService_GoogleGrpc_CallCredentials_StsService::CopyFrom(const GrpcService_GoogleGrpc_CallCredentials_StsService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.CallCredentials.StsService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService_GoogleGrpc_CallCredentials_StsService::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_CallCredentials_StsService::InternalSwap(GrpcService_GoogleGrpc_CallCredentials_StsService* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  token_exchange_service_uri_.Swap(&other->token_exchange_service_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  resource_.Swap(&other->resource_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  audience_.Swap(&other->audience_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scope_.Swap(&other->scope_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  requested_token_type_.Swap(&other->requested_token_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subject_token_path_.Swap(&other->subject_token_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subject_token_type_.Swap(&other->subject_token_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  actor_token_path_.Swap(&other->actor_token_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  actor_token_type_.Swap(&other->actor_token_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string GrpcService_GoogleGrpc_CallCredentials_StsService::GetTypeName() const {
  return "GrpcService.GoogleGrpc.CallCredentials.StsService";
}


// ===================================================================

void GrpcService_GoogleGrpc_CallCredentials::InitAsDefaultInstance() {
}
class GrpcService_GoogleGrpc_CallCredentials::_Internal {
 public:
  static const ::GrpcService_GoogleGrpc_Empty& google_compute_engine(const GrpcService_GoogleGrpc_CallCredentials* msg);
  static const ::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials& service_account_jwt_access(const GrpcService_GoogleGrpc_CallCredentials* msg);
  static const ::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials& google_iam(const GrpcService_GoogleGrpc_CallCredentials* msg);
  static const ::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin& from_plugin(const GrpcService_GoogleGrpc_CallCredentials* msg);
  static const ::GrpcService_GoogleGrpc_CallCredentials_StsService& sts_service(const GrpcService_GoogleGrpc_CallCredentials* msg);
};

const ::GrpcService_GoogleGrpc_Empty&
GrpcService_GoogleGrpc_CallCredentials::_Internal::google_compute_engine(const GrpcService_GoogleGrpc_CallCredentials* msg) {
  return *msg->credential_specifier_.google_compute_engine_;
}
const ::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials&
GrpcService_GoogleGrpc_CallCredentials::_Internal::service_account_jwt_access(const GrpcService_GoogleGrpc_CallCredentials* msg) {
  return *msg->credential_specifier_.service_account_jwt_access_;
}
const ::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials&
GrpcService_GoogleGrpc_CallCredentials::_Internal::google_iam(const GrpcService_GoogleGrpc_CallCredentials* msg) {
  return *msg->credential_specifier_.google_iam_;
}
const ::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin&
GrpcService_GoogleGrpc_CallCredentials::_Internal::from_plugin(const GrpcService_GoogleGrpc_CallCredentials* msg) {
  return *msg->credential_specifier_.from_plugin_;
}
const ::GrpcService_GoogleGrpc_CallCredentials_StsService&
GrpcService_GoogleGrpc_CallCredentials::_Internal::sts_service(const GrpcService_GoogleGrpc_CallCredentials* msg) {
  return *msg->credential_specifier_.sts_service_;
}
void GrpcService_GoogleGrpc_CallCredentials::set_allocated_google_compute_engine(::GrpcService_GoogleGrpc_Empty* google_compute_engine) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_credential_specifier();
  if (google_compute_engine) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      google_compute_engine = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, google_compute_engine, submessage_arena);
    }
    set_has_google_compute_engine();
    credential_specifier_.google_compute_engine_ = google_compute_engine;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.google_compute_engine)
}
void GrpcService_GoogleGrpc_CallCredentials::set_allocated_service_account_jwt_access(::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials* service_account_jwt_access) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_credential_specifier();
  if (service_account_jwt_access) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      service_account_jwt_access = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, service_account_jwt_access, submessage_arena);
    }
    set_has_service_account_jwt_access();
    credential_specifier_.service_account_jwt_access_ = service_account_jwt_access;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.service_account_jwt_access)
}
void GrpcService_GoogleGrpc_CallCredentials::set_allocated_google_iam(::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials* google_iam) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_credential_specifier();
  if (google_iam) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      google_iam = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, google_iam, submessage_arena);
    }
    set_has_google_iam();
    credential_specifier_.google_iam_ = google_iam;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.google_iam)
}
void GrpcService_GoogleGrpc_CallCredentials::set_allocated_from_plugin(::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin* from_plugin) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_credential_specifier();
  if (from_plugin) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      from_plugin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, from_plugin, submessage_arena);
    }
    set_has_from_plugin();
    credential_specifier_.from_plugin_ = from_plugin;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.from_plugin)
}
void GrpcService_GoogleGrpc_CallCredentials::set_allocated_sts_service(::GrpcService_GoogleGrpc_CallCredentials_StsService* sts_service) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_credential_specifier();
  if (sts_service) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sts_service = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sts_service, submessage_arena);
    }
    set_has_sts_service();
    credential_specifier_.sts_service_ = sts_service;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.GoogleGrpc.CallCredentials.sts_service)
}
GrpcService_GoogleGrpc_CallCredentials::GrpcService_GoogleGrpc_CallCredentials()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService.GoogleGrpc.CallCredentials)
}
GrpcService_GoogleGrpc_CallCredentials::GrpcService_GoogleGrpc_CallCredentials(const GrpcService_GoogleGrpc_CallCredentials& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_credential_specifier();
  switch (from.credential_specifier_case()) {
    case kAccessToken: {
      set_access_token(from.access_token());
      break;
    }
    case kGoogleComputeEngine: {
      mutable_google_compute_engine()->::GrpcService_GoogleGrpc_Empty::MergeFrom(from.google_compute_engine());
      break;
    }
    case kGoogleRefreshToken: {
      set_google_refresh_token(from.google_refresh_token());
      break;
    }
    case kServiceAccountJwtAccess: {
      mutable_service_account_jwt_access()->::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::MergeFrom(from.service_account_jwt_access());
      break;
    }
    case kGoogleIam: {
      mutable_google_iam()->::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::MergeFrom(from.google_iam());
      break;
    }
    case kFromPlugin: {
      mutable_from_plugin()->::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::MergeFrom(from.from_plugin());
      break;
    }
    case kStsService: {
      mutable_sts_service()->::GrpcService_GoogleGrpc_CallCredentials_StsService::MergeFrom(from.sts_service());
      break;
    }
    case CREDENTIAL_SPECIFIER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc.CallCredentials)
}

void GrpcService_GoogleGrpc_CallCredentials::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GrpcService_GoogleGrpc_CallCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  clear_has_credential_specifier();
}

GrpcService_GoogleGrpc_CallCredentials::~GrpcService_GoogleGrpc_CallCredentials() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc.CallCredentials)
  SharedDtor();
}

void GrpcService_GoogleGrpc_CallCredentials::SharedDtor() {
  if (has_credential_specifier()) {
    clear_credential_specifier();
  }
}

void GrpcService_GoogleGrpc_CallCredentials::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService_GoogleGrpc_CallCredentials& GrpcService_GoogleGrpc_CallCredentials::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_GoogleGrpc_CallCredentials_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService_GoogleGrpc_CallCredentials::clear_credential_specifier() {
// @@protoc_insertion_point(one_of_clear_start:GrpcService.GoogleGrpc.CallCredentials)
  switch (credential_specifier_case()) {
    case kAccessToken: {
      credential_specifier_.access_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kGoogleComputeEngine: {
      delete credential_specifier_.google_compute_engine_;
      break;
    }
    case kGoogleRefreshToken: {
      credential_specifier_.google_refresh_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kServiceAccountJwtAccess: {
      delete credential_specifier_.service_account_jwt_access_;
      break;
    }
    case kGoogleIam: {
      delete credential_specifier_.google_iam_;
      break;
    }
    case kFromPlugin: {
      delete credential_specifier_.from_plugin_;
      break;
    }
    case kStsService: {
      delete credential_specifier_.sts_service_;
      break;
    }
    case CREDENTIAL_SPECIFIER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CREDENTIAL_SPECIFIER_NOT_SET;
}


void GrpcService_GoogleGrpc_CallCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc.CallCredentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_credential_specifier();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService_GoogleGrpc_CallCredentials::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string access_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_access_token(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .GrpcService.GoogleGrpc.Empty google_compute_engine = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_google_compute_engine(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string google_refresh_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_google_refresh_token(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials service_account_jwt_access = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_service_account_jwt_access(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials google_iam = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_google_iam(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin from_plugin = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_from_plugin(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .GrpcService.GoogleGrpc.CallCredentials.StsService sts_service = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_sts_service(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService_GoogleGrpc_CallCredentials::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService.GoogleGrpc.CallCredentials)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string access_token = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_access_token()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->access_token().data(), static_cast<int>(this->access_token().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.access_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GrpcService.GoogleGrpc.Empty google_compute_engine = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_google_compute_engine()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string google_refresh_token = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_google_refresh_token()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->google_refresh_token().data(), static_cast<int>(this->google_refresh_token().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.CallCredentials.google_refresh_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials service_account_jwt_access = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_service_account_jwt_access()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials google_iam = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_google_iam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin from_plugin = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_from_plugin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GrpcService.GoogleGrpc.CallCredentials.StsService sts_service = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_sts_service()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService.GoogleGrpc.CallCredentials)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService.GoogleGrpc.CallCredentials)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService_GoogleGrpc_CallCredentials::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService.GoogleGrpc.CallCredentials)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_token = 1;
  if (has_access_token()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->access_token().data(), static_cast<int>(this->access_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.access_token");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->access_token(), output);
  }

  // .GrpcService.GoogleGrpc.Empty google_compute_engine = 2;
  if (has_google_compute_engine()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::google_compute_engine(this), output);
  }

  // string google_refresh_token = 3;
  if (has_google_refresh_token()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->google_refresh_token().data(), static_cast<int>(this->google_refresh_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.CallCredentials.google_refresh_token");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->google_refresh_token(), output);
  }

  // .GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials service_account_jwt_access = 4;
  if (has_service_account_jwt_access()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      4, _Internal::service_account_jwt_access(this), output);
  }

  // .GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials google_iam = 5;
  if (has_google_iam()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      5, _Internal::google_iam(this), output);
  }

  // .GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin from_plugin = 6;
  if (has_from_plugin()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      6, _Internal::from_plugin(this), output);
  }

  // .GrpcService.GoogleGrpc.CallCredentials.StsService sts_service = 7;
  if (has_sts_service()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      7, _Internal::sts_service(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService.GoogleGrpc.CallCredentials)
}

size_t GrpcService_GoogleGrpc_CallCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc.CallCredentials)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (credential_specifier_case()) {
    // string access_token = 1;
    case kAccessToken: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->access_token());
      break;
    }
    // .GrpcService.GoogleGrpc.Empty google_compute_engine = 2;
    case kGoogleComputeEngine: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *credential_specifier_.google_compute_engine_);
      break;
    }
    // string google_refresh_token = 3;
    case kGoogleRefreshToken: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->google_refresh_token());
      break;
    }
    // .GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials service_account_jwt_access = 4;
    case kServiceAccountJwtAccess: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *credential_specifier_.service_account_jwt_access_);
      break;
    }
    // .GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials google_iam = 5;
    case kGoogleIam: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *credential_specifier_.google_iam_);
      break;
    }
    // .GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin from_plugin = 6;
    case kFromPlugin: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *credential_specifier_.from_plugin_);
      break;
    }
    // .GrpcService.GoogleGrpc.CallCredentials.StsService sts_service = 7;
    case kStsService: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *credential_specifier_.sts_service_);
      break;
    }
    case CREDENTIAL_SPECIFIER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService_GoogleGrpc_CallCredentials::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService_GoogleGrpc_CallCredentials*>(
      &from));
}

void GrpcService_GoogleGrpc_CallCredentials::MergeFrom(const GrpcService_GoogleGrpc_CallCredentials& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc.CallCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.credential_specifier_case()) {
    case kAccessToken: {
      set_access_token(from.access_token());
      break;
    }
    case kGoogleComputeEngine: {
      mutable_google_compute_engine()->::GrpcService_GoogleGrpc_Empty::MergeFrom(from.google_compute_engine());
      break;
    }
    case kGoogleRefreshToken: {
      set_google_refresh_token(from.google_refresh_token());
      break;
    }
    case kServiceAccountJwtAccess: {
      mutable_service_account_jwt_access()->::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials::MergeFrom(from.service_account_jwt_access());
      break;
    }
    case kGoogleIam: {
      mutable_google_iam()->::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials::MergeFrom(from.google_iam());
      break;
    }
    case kFromPlugin: {
      mutable_from_plugin()->::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin::MergeFrom(from.from_plugin());
      break;
    }
    case kStsService: {
      mutable_sts_service()->::GrpcService_GoogleGrpc_CallCredentials_StsService::MergeFrom(from.sts_service());
      break;
    }
    case CREDENTIAL_SPECIFIER_NOT_SET: {
      break;
    }
  }
}

void GrpcService_GoogleGrpc_CallCredentials::CopyFrom(const GrpcService_GoogleGrpc_CallCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc.CallCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService_GoogleGrpc_CallCredentials::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc_CallCredentials::InternalSwap(GrpcService_GoogleGrpc_CallCredentials* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(credential_specifier_, other->credential_specifier_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

std::string GrpcService_GoogleGrpc_CallCredentials::GetTypeName() const {
  return "GrpcService.GoogleGrpc.CallCredentials";
}


// ===================================================================

void GrpcService_GoogleGrpc::InitAsDefaultInstance() {
  ::_GrpcService_GoogleGrpc_default_instance_._instance.get_mutable()->channel_credentials_ = const_cast< ::GrpcService_GoogleGrpc_ChannelCredentials*>(
      ::GrpcService_GoogleGrpc_ChannelCredentials::internal_default_instance());
  ::_GrpcService_GoogleGrpc_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
class GrpcService_GoogleGrpc::_Internal {
 public:
  static const ::GrpcService_GoogleGrpc_ChannelCredentials& channel_credentials(const GrpcService_GoogleGrpc* msg);
  static const ::google::protobuf::Struct& config(const GrpcService_GoogleGrpc* msg);
};

const ::GrpcService_GoogleGrpc_ChannelCredentials&
GrpcService_GoogleGrpc::_Internal::channel_credentials(const GrpcService_GoogleGrpc* msg) {
  return *msg->channel_credentials_;
}
const ::google::protobuf::Struct&
GrpcService_GoogleGrpc::_Internal::config(const GrpcService_GoogleGrpc* msg) {
  return *msg->config_;
}
void GrpcService_GoogleGrpc::clear_config() {
  if (GetArenaNoVirtual() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
GrpcService_GoogleGrpc::GrpcService_GoogleGrpc()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService.GoogleGrpc)
}
GrpcService_GoogleGrpc::GrpcService_GoogleGrpc(const GrpcService_GoogleGrpc& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      call_credentials_(from.call_credentials_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.target_uri().empty()) {
    target_uri_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.target_uri_);
  }
  stat_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.stat_prefix().empty()) {
    stat_prefix_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.stat_prefix_);
  }
  credentials_factory_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.credentials_factory_name().empty()) {
    credentials_factory_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.credentials_factory_name_);
  }
  if (from.has_channel_credentials()) {
    channel_credentials_ = new ::GrpcService_GoogleGrpc_ChannelCredentials(*from.channel_credentials_);
  } else {
    channel_credentials_ = nullptr;
  }
  if (from.has_config()) {
    config_ = new ::google::protobuf::Struct(*from.config_);
  } else {
    config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:GrpcService.GoogleGrpc)
}

void GrpcService_GoogleGrpc::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GrpcService_GoogleGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  target_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  stat_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  credentials_factory_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&channel_credentials_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&channel_credentials_)) + sizeof(config_));
}

GrpcService_GoogleGrpc::~GrpcService_GoogleGrpc() {
  // @@protoc_insertion_point(destructor:GrpcService.GoogleGrpc)
  SharedDtor();
}

void GrpcService_GoogleGrpc::SharedDtor() {
  target_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  stat_prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  credentials_factory_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete channel_credentials_;
  if (this != internal_default_instance()) delete config_;
}

void GrpcService_GoogleGrpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService_GoogleGrpc& GrpcService_GoogleGrpc::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_GoogleGrpc_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService_GoogleGrpc::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.GoogleGrpc)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  call_credentials_.Clear();
  target_uri_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  stat_prefix_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  credentials_factory_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && channel_credentials_ != nullptr) {
    delete channel_credentials_;
  }
  channel_credentials_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService_GoogleGrpc::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string target_uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_target_uri(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .GrpcService.GoogleGrpc.ChannelCredentials channel_credentials = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_channel_credentials(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .GrpcService.GoogleGrpc.CallCredentials call_credentials = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_call_credentials(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // string stat_prefix = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_stat_prefix(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string credentials_factory_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_credentials_factory_name(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Struct config = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService_GoogleGrpc::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService.GoogleGrpc)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_uri = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_target_uri()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->target_uri().data(), static_cast<int>(this->target_uri().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.target_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GrpcService.GoogleGrpc.ChannelCredentials channel_credentials = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_channel_credentials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GrpcService.GoogleGrpc.CallCredentials call_credentials = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_call_credentials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string stat_prefix = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_stat_prefix()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->stat_prefix().data(), static_cast<int>(this->stat_prefix().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.stat_prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string credentials_factory_name = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_credentials_factory_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->credentials_factory_name().data(), static_cast<int>(this->credentials_factory_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.GoogleGrpc.credentials_factory_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct config = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService.GoogleGrpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService.GoogleGrpc)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService_GoogleGrpc::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService.GoogleGrpc)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_uri = 1;
  if (this->target_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->target_uri().data(), static_cast<int>(this->target_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.target_uri");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->target_uri(), output);
  }

  // .GrpcService.GoogleGrpc.ChannelCredentials channel_credentials = 2;
  if (this->has_channel_credentials()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::channel_credentials(this), output);
  }

  // repeated .GrpcService.GoogleGrpc.CallCredentials call_credentials = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->call_credentials_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3,
      this->call_credentials(static_cast<int>(i)),
      output);
  }

  // string stat_prefix = 4;
  if (this->stat_prefix().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->stat_prefix().data(), static_cast<int>(this->stat_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.stat_prefix");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->stat_prefix(), output);
  }

  // string credentials_factory_name = 5;
  if (this->credentials_factory_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->credentials_factory_name().data(), static_cast<int>(this->credentials_factory_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.GoogleGrpc.credentials_factory_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->credentials_factory_name(), output);
  }

  // .google.protobuf.Struct config = 6;
  if (this->has_config()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      6, _Internal::config(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService.GoogleGrpc)
}

size_t GrpcService_GoogleGrpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.GoogleGrpc)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GrpcService.GoogleGrpc.CallCredentials call_credentials = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->call_credentials_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->call_credentials(static_cast<int>(i)));
    }
  }

  // string target_uri = 1;
  if (this->target_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->target_uri());
  }

  // string stat_prefix = 4;
  if (this->stat_prefix().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->stat_prefix());
  }

  // string credentials_factory_name = 5;
  if (this->credentials_factory_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->credentials_factory_name());
  }

  // .GrpcService.GoogleGrpc.ChannelCredentials channel_credentials = 2;
  if (this->has_channel_credentials()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *channel_credentials_);
  }

  // .google.protobuf.Struct config = 6;
  if (this->has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService_GoogleGrpc::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService_GoogleGrpc*>(
      &from));
}

void GrpcService_GoogleGrpc::MergeFrom(const GrpcService_GoogleGrpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.GoogleGrpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  call_credentials_.MergeFrom(from.call_credentials_);
  if (from.target_uri().size() > 0) {

    target_uri_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.target_uri_);
  }
  if (from.stat_prefix().size() > 0) {

    stat_prefix_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.stat_prefix_);
  }
  if (from.credentials_factory_name().size() > 0) {

    credentials_factory_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.credentials_factory_name_);
  }
  if (from.has_channel_credentials()) {
    mutable_channel_credentials()->::GrpcService_GoogleGrpc_ChannelCredentials::MergeFrom(from.channel_credentials());
  }
  if (from.has_config()) {
    mutable_config()->::google::protobuf::Struct::MergeFrom(from.config());
  }
}

void GrpcService_GoogleGrpc::CopyFrom(const GrpcService_GoogleGrpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.GoogleGrpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService_GoogleGrpc::IsInitialized() const {
  return true;
}

void GrpcService_GoogleGrpc::InternalSwap(GrpcService_GoogleGrpc* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&call_credentials_)->InternalSwap(CastToBase(&other->call_credentials_));
  target_uri_.Swap(&other->target_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stat_prefix_.Swap(&other->stat_prefix_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  credentials_factory_name_.Swap(&other->credentials_factory_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(channel_credentials_, other->channel_credentials_);
  swap(config_, other->config_);
}

std::string GrpcService_GoogleGrpc::GetTypeName() const {
  return "GrpcService.GoogleGrpc";
}


// ===================================================================

void GrpcService_HeaderValue::InitAsDefaultInstance() {
}
class GrpcService_HeaderValue::_Internal {
 public:
};

GrpcService_HeaderValue::GrpcService_HeaderValue()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService.HeaderValue)
}
GrpcService_HeaderValue::GrpcService_HeaderValue(const GrpcService_HeaderValue& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.key().empty()) {
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:GrpcService.HeaderValue)
}

void GrpcService_HeaderValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GrpcService_HeaderValue_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GrpcService_HeaderValue::~GrpcService_HeaderValue() {
  // @@protoc_insertion_point(destructor:GrpcService.HeaderValue)
  SharedDtor();
}

void GrpcService_HeaderValue::SharedDtor() {
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GrpcService_HeaderValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService_HeaderValue& GrpcService_HeaderValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_HeaderValue_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService_HeaderValue::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService.HeaderValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService_HeaderValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_key(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_value(), ptr, ctx, nullptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService_HeaderValue::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService.HeaderValue)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.HeaderValue.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "GrpcService.HeaderValue.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService.HeaderValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService.HeaderValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService_HeaderValue::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService.HeaderValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.HeaderValue.key");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GrpcService.HeaderValue.value");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService.HeaderValue)
}

size_t GrpcService_HeaderValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService.HeaderValue)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService_HeaderValue::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService_HeaderValue*>(
      &from));
}

void GrpcService_HeaderValue::MergeFrom(const GrpcService_HeaderValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService.HeaderValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void GrpcService_HeaderValue::CopyFrom(const GrpcService_HeaderValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService.HeaderValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService_HeaderValue::IsInitialized() const {
  return true;
}

void GrpcService_HeaderValue::InternalSwap(GrpcService_HeaderValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string GrpcService_HeaderValue::GetTypeName() const {
  return "GrpcService.HeaderValue";
}


// ===================================================================

void GrpcService::InitAsDefaultInstance() {
}
class GrpcService::_Internal {
 public:
  static const ::GrpcService_EnvoyGrpc& envoy_grpc(const GrpcService* msg);
  static const ::GrpcService_GoogleGrpc& google_grpc(const GrpcService* msg);
};

const ::GrpcService_EnvoyGrpc&
GrpcService::_Internal::envoy_grpc(const GrpcService* msg) {
  return *msg->target_specifier_.envoy_grpc_;
}
const ::GrpcService_GoogleGrpc&
GrpcService::_Internal::google_grpc(const GrpcService* msg) {
  return *msg->target_specifier_.google_grpc_;
}
void GrpcService::set_allocated_envoy_grpc(::GrpcService_EnvoyGrpc* envoy_grpc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_target_specifier();
  if (envoy_grpc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      envoy_grpc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, envoy_grpc, submessage_arena);
    }
    set_has_envoy_grpc();
    target_specifier_.envoy_grpc_ = envoy_grpc;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.envoy_grpc)
}
void GrpcService::set_allocated_google_grpc(::GrpcService_GoogleGrpc* google_grpc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_target_specifier();
  if (google_grpc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      google_grpc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, google_grpc, submessage_arena);
    }
    set_has_google_grpc();
    target_specifier_.google_grpc_ = google_grpc;
  }
  // @@protoc_insertion_point(field_set_allocated:GrpcService.google_grpc)
}
GrpcService::GrpcService()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GrpcService)
}
GrpcService::GrpcService(const GrpcService& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      initial_metadata_(from.initial_metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_target_specifier();
  switch (from.target_specifier_case()) {
    case kEnvoyGrpc: {
      mutable_envoy_grpc()->::GrpcService_EnvoyGrpc::MergeFrom(from.envoy_grpc());
      break;
    }
    case kGoogleGrpc: {
      mutable_google_grpc()->::GrpcService_GoogleGrpc::MergeFrom(from.google_grpc());
      break;
    }
    case TARGET_SPECIFIER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:GrpcService)
}

void GrpcService::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GrpcService_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  clear_has_target_specifier();
}

GrpcService::~GrpcService() {
  // @@protoc_insertion_point(destructor:GrpcService)
  SharedDtor();
}

void GrpcService::SharedDtor() {
  if (has_target_specifier()) {
    clear_target_specifier();
  }
}

void GrpcService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrpcService& GrpcService::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrpcService_proxy_5fwasm_5fintrinsics_5flite_2eproto.base);
  return *internal_default_instance();
}


void GrpcService::clear_target_specifier() {
// @@protoc_insertion_point(one_of_clear_start:GrpcService)
  switch (target_specifier_case()) {
    case kEnvoyGrpc: {
      delete target_specifier_.envoy_grpc_;
      break;
    }
    case kGoogleGrpc: {
      delete target_specifier_.google_grpc_;
      break;
    }
    case TARGET_SPECIFIER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TARGET_SPECIFIER_NOT_SET;
}


void GrpcService::Clear() {
// @@protoc_insertion_point(message_clear_start:GrpcService)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initial_metadata_.Clear();
  clear_target_specifier();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GrpcService::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .GrpcService.EnvoyGrpc envoy_grpc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_envoy_grpc(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .GrpcService.GoogleGrpc google_grpc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_google_grpc(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .GrpcService.HeaderValue initial_metadata = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_initial_metadata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GrpcService::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:GrpcService)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GrpcService.EnvoyGrpc envoy_grpc = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_envoy_grpc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GrpcService.GoogleGrpc google_grpc = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_google_grpc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GrpcService.HeaderValue initial_metadata = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_initial_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GrpcService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GrpcService)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GrpcService::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GrpcService)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GrpcService.EnvoyGrpc envoy_grpc = 1;
  if (has_envoy_grpc()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::envoy_grpc(this), output);
  }

  // .GrpcService.GoogleGrpc google_grpc = 2;
  if (has_google_grpc()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::google_grpc(this), output);
  }

  // repeated .GrpcService.HeaderValue initial_metadata = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initial_metadata_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      5,
      this->initial_metadata(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:GrpcService)
}

size_t GrpcService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GrpcService)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GrpcService.HeaderValue initial_metadata = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->initial_metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->initial_metadata(static_cast<int>(i)));
    }
  }

  switch (target_specifier_case()) {
    // .GrpcService.EnvoyGrpc envoy_grpc = 1;
    case kEnvoyGrpc: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *target_specifier_.envoy_grpc_);
      break;
    }
    // .GrpcService.GoogleGrpc google_grpc = 2;
    case kGoogleGrpc: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *target_specifier_.google_grpc_);
      break;
    }
    case TARGET_SPECIFIER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrpcService::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GrpcService*>(
      &from));
}

void GrpcService::MergeFrom(const GrpcService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GrpcService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  initial_metadata_.MergeFrom(from.initial_metadata_);
  switch (from.target_specifier_case()) {
    case kEnvoyGrpc: {
      mutable_envoy_grpc()->::GrpcService_EnvoyGrpc::MergeFrom(from.envoy_grpc());
      break;
    }
    case kGoogleGrpc: {
      mutable_google_grpc()->::GrpcService_GoogleGrpc::MergeFrom(from.google_grpc());
      break;
    }
    case TARGET_SPECIFIER_NOT_SET: {
      break;
    }
  }
}

void GrpcService::CopyFrom(const GrpcService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GrpcService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrpcService::IsInitialized() const {
  return true;
}

void GrpcService::InternalSwap(GrpcService* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&initial_metadata_)->InternalSwap(CastToBase(&other->initial_metadata_));
  swap(target_specifier_, other->target_specifier_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

std::string GrpcService::GetTypeName() const {
  return "GrpcService";
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::WKT* Arena::CreateMaybeMessage< ::WKT >(Arena* arena) {
  return Arena::CreateInternal< ::WKT >(arena);
}
template<> PROTOBUF_NOINLINE ::DataSource* Arena::CreateMaybeMessage< ::DataSource >(Arena* arena) {
  return Arena::CreateInternal< ::DataSource >(arena);
}
template<> PROTOBUF_NOINLINE ::Any* Arena::CreateMaybeMessage< ::Any >(Arena* arena) {
  return Arena::CreateInternal< ::Any >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService_EnvoyGrpc* Arena::CreateMaybeMessage< ::GrpcService_EnvoyGrpc >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService_EnvoyGrpc >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService_GoogleGrpc_SslCredentials* Arena::CreateMaybeMessage< ::GrpcService_GoogleGrpc_SslCredentials >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService_GoogleGrpc_SslCredentials >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService_GoogleGrpc_GoogleLocalCredentials* Arena::CreateMaybeMessage< ::GrpcService_GoogleGrpc_GoogleLocalCredentials >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService_GoogleGrpc_GoogleLocalCredentials >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService_GoogleGrpc_Empty* Arena::CreateMaybeMessage< ::GrpcService_GoogleGrpc_Empty >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService_GoogleGrpc_Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService_GoogleGrpc_ChannelCredentials* Arena::CreateMaybeMessage< ::GrpcService_GoogleGrpc_ChannelCredentials >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService_GoogleGrpc_ChannelCredentials >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials* Arena::CreateMaybeMessage< ::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials* Arena::CreateMaybeMessage< ::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin* Arena::CreateMaybeMessage< ::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService_GoogleGrpc_CallCredentials_StsService* Arena::CreateMaybeMessage< ::GrpcService_GoogleGrpc_CallCredentials_StsService >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService_GoogleGrpc_CallCredentials_StsService >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService_GoogleGrpc_CallCredentials* Arena::CreateMaybeMessage< ::GrpcService_GoogleGrpc_CallCredentials >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService_GoogleGrpc_CallCredentials >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService_GoogleGrpc* Arena::CreateMaybeMessage< ::GrpcService_GoogleGrpc >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService_GoogleGrpc >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService_HeaderValue* Arena::CreateMaybeMessage< ::GrpcService_HeaderValue >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService_HeaderValue >(arena);
}
template<> PROTOBUF_NOINLINE ::GrpcService* Arena::CreateMaybeMessage< ::GrpcService >(Arena* arena) {
  return Arena::CreateInternal< ::GrpcService >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
