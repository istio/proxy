load("@my_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "pkg",
    srcs = [
        "platform_lib_unix.go",
        "platform_lib_windows.go",
    ],
    importpath = "github.com/bazelbuild/bazel-gazelle/tests/bcr/go_work/pkg",
    visibility = ["//visibility:public"],
    deps = select({
        "@my_rules_go//go/platform:aix": [
            "@org_golang_x_sys//unix",
        ],
        "@my_rules_go//go/platform:android": [
            "@org_golang_x_sys//unix",
        ],
        "@my_rules_go//go/platform:darwin": [
            "@org_golang_x_sys//unix",
        ],
        "@my_rules_go//go/platform:dragonfly": [
            "@org_golang_x_sys//unix",
        ],
        "@my_rules_go//go/platform:freebsd": [
            "@org_golang_x_sys//unix",
        ],
        "@my_rules_go//go/platform:illumos": [
            "@org_golang_x_sys//unix",
        ],
        "@my_rules_go//go/platform:ios": [
            "@org_golang_x_sys//unix",
        ],
        "@my_rules_go//go/platform:linux": [
            "@org_golang_x_sys//unix",
        ],
        "@my_rules_go//go/platform:netbsd": [
            "@org_golang_x_sys//unix",
        ],
        "@my_rules_go//go/platform:openbsd": [
            "@org_golang_x_sys//unix",
        ],
        "@my_rules_go//go/platform:solaris": [
            "@org_golang_x_sys//unix",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "pkg_test",
    srcs = ["pkg_test.go"],
    embed = [":pkg"],
    deps = [
        "//pkg/data",
        "@circl//dh/x25519",
        "@com_github_bazelbuild_buildtools//labels:go_default_library",
        "@com_github_bmatcuk_doublestar_v4//:doublestar",
        "@com_github_datadog_sketches_go//ddsketch",
        "@com_github_envoyproxy_protoc_gen_validate//validate",
        "@com_github_fmeum_dep_on_gazelle//:dep_on_gazelle",
        "@com_github_google_safetext//yamltemplate",
        "@com_github_stretchr_testify//require:go_default_library",
        "@my_rules_go//go/runfiles",
        "@org_example_hello//:hello",
    ],
)
