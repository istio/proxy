--- a/stack.h	2025-05-13 08:37:14.009401705 +0200
+++ b/stack.h	2025-05-13 08:43:14.516514806 +0200
@@ -432,11 +432,6 @@
     return ((sk_##name##_cmp_func)cmp_func)(&a_ptr, &b_ptr);                   \
   }                                                                            \
                                                                                \
-  OPENSSL_INLINE int sk_##name##_call_delete_if_func(                          \
-      OPENSSL_sk_delete_if_func func, void *obj, void *data) {                 \
-    return ((sk_##name##_delete_if_func)func)((ptrtype)obj, data);             \
-  }                                                                            \
-                                                                               \
   OPENSSL_INLINE STACK_OF(name) *sk_##name##_new(sk_##name##_cmp_func comp) {  \
     return (STACK_OF(name) *)OPENSSL_sk_new((OPENSSL_sk_cmp_func)comp);        \
   }                                                                            \
@@ -489,12 +484,6 @@
                                           (const void *)p);                    \
   }                                                                            \
                                                                                \
-  OPENSSL_INLINE void sk_##name##_delete_if(                                   \
-      STACK_OF(name) *sk, sk_##name##_delete_if_func func, void *data) {       \
-    OPENSSL_sk_delete_if((OPENSSL_STACK *)sk, sk_##name##_call_delete_if_func, \
-                         (OPENSSL_sk_delete_if_func)func, data);               \
-  }                                                                            \
-                                                                               \
   OPENSSL_INLINE int sk_##name##_find(const STACK_OF(name) *sk,                \
                                       size_t *out_index, constptrtype p) {     \
     return OPENSSL_sk_find((const OPENSSL_STACK *)sk, out_index,               \
@@ -581,12 +570,8 @@
     // sk_FOO_pop_free is defined by macros and bound by name, so we cannot
     // access it from C++ here.
     using Type = typename StackTraits<Stack>::Type;
-    OPENSSL_sk_pop_free_ex(
-        reinterpret_cast<OPENSSL_STACK *>(sk),
-        [](OPENSSL_sk_free_func /* unused */, void *ptr) {
-          DeleterImpl<Type>::Free(reinterpret_cast<Type *>(ptr));
-        },
-        nullptr);
+    ossl_OPENSSL_sk_pop_free(reinterpret_cast<ossl_OPENSSL_STACK *>(sk),
+		    reinterpret_cast<void (*)(void *)>(DeleterImpl<Type>::Free));
   }
 };
 
