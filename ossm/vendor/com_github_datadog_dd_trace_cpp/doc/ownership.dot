# This describes the object ownership relationships among the components
# in the tracer library.
#
# Each vertex (node) is a component, while each edge is a relationship.
# Edges are labeled by the kind of "smart pointer" that describes the
# relationship, e.g. "Tracer holds a shared_ptr to SpanSampler," or
# "Span holds a raw pointer to SpanData."
#
# Vertices labeled with a ðŸ”’ are protected by a mutex.
#
digraph {
    rankdir=LR;

    Tracer -> "Collector ðŸ”’" [label=" shared", fontsize=8];
    Tracer -> "SpanSampler ðŸ”’" [label=" shared", fontsize=8];
    Tracer -> "TraceSampler ðŸ”’" [label=" shared", fontsize=8];

    Span -> "TraceSegment ðŸ”’" [label=" shared", fontsize=8];
    Span -> SpanData [label=< <B> raw</B> >, fontsize=8];

    "TraceSegment ðŸ”’" -> SpanData [label=< <B> unique</B> >, fontsize=8];
    "TraceSegment ðŸ”’" -> "Collector ðŸ”’" [label=" shared", fontsize=8];
    "TraceSegment ðŸ”’" -> "SpanSampler ðŸ”’" [label=" shared", fontsize=8];
    "TraceSegment ðŸ”’" -> "TraceSampler ðŸ”’" [label=" shared", fontsize=8];
}
