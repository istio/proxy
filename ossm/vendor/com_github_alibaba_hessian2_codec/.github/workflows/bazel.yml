# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push: {}
  pull_request: {}

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: build test hessian2
        run: cd test_hessian && mvn clean package -Dmaven.test.skip=true

      - name: build
        run: |
          bazel build //hessian2/...
          bazel build --cxxopt="-DCOMPATIBLE_WITH_JAVA_HESSIAN_LITE" //hessian2/...

      - name: demo-build
        run: |
          cd demo && bazel build //...

      - name: test
        run: |
          bazel test //hessian2/...
          bazel test --cxxopt="-DCOMPATIBLE_WITH_JAVA_HESSIAN_LITE" //hessian2/...

      - name: Install lcov and genhtml and link llvm
        run: |
          sudo apt update
          sudo apt -y install lcov
          sudo ln -s /usr/bin/llvm-profdata-11 /usr/bin/llvm-profdata
          sudo ln -s /usr/bin/llvm-cov-11 /usr/bin/llvm-cov

      # Run the script to generate coverage report. Clang/llvm and lcov/genhtml are necessary for this.
      - name: coverage
        run: |
          ./coverage.sh

      # Upload coverage report to the codecov.
      - name: report
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./coverage_report/coverage.dat
          name: codecov-hessian2-codec
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
