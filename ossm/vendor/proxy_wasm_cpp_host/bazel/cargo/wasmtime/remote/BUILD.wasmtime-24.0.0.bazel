###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @//bazel/cargo/wasmtime:crates_vendor
###############################################################################

load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "wasmtime",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = False,
    ),
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "cranelift",
        "gc",
        "runtime",
        "std",
    ],
    crate_root = "src/lib.rs",
    edition = "2021",
    proc_macro_deps = [
        "@cu__paste-1.0.15//:paste",
        "@cu__serde_derive-1.0.204//:serde_derive",
        "@cu__wasmtime-versioned-export-macros-24.0.0//:wasmtime_versioned_export_macros",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=wasmtime",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "24.0.0",
    deps = [
        "@cu__anyhow-1.0.86//:anyhow",
        "@cu__bitflags-2.6.0//:bitflags",
        "@cu__bumpalo-3.16.0//:bumpalo",
        "@cu__cfg-if-1.0.0//:cfg_if",
        "@cu__hashbrown-0.14.5//:hashbrown",
        "@cu__indexmap-2.3.0//:indexmap",
        "@cu__libc-0.2.155//:libc",
        "@cu__libm-0.2.8//:libm",
        "@cu__log-0.4.22//:log",
        "@cu__object-0.36.2//:object",
        "@cu__once_cell-1.19.0//:once_cell",
        "@cu__postcard-1.0.8//:postcard",
        "@cu__serde-1.0.204//:serde",
        "@cu__smallvec-1.13.2//:smallvec",
        "@cu__sptr-0.3.2//:sptr",
        "@cu__target-lexicon-0.12.16//:target_lexicon",
        "@cu__wasmparser-0.215.0//:wasmparser",
        "@cu__wasmtime-24.0.0//:build_script_build",
        "@cu__wasmtime-asm-macros-24.0.0//:wasmtime_asm_macros",
        "@cu__wasmtime-cranelift-24.0.0//:wasmtime_cranelift",
        "@cu__wasmtime-environ-24.0.0//:wasmtime_environ",
        "@cu__wasmtime-jit-icache-coherence-24.0.0//:wasmtime_jit_icache_coherence",
        "@cu__wasmtime-slab-24.0.0//:wasmtime_slab",
    ] + select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [
            "@cu__mach2-0.4.2//:mach2",  # cfg(target_os = "macos")
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:aarch64-apple-ios": [
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:aarch64-apple-ios-sim": [
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:aarch64-fuchsia": [
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:aarch64-linux-android": [
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [
            "@cu__windows-sys-0.52.0//:windows_sys",  # cfg(target_os = "windows")
        ],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "@cu__memfd-0.6.4//:memfd",  # cfg(target_os = "linux")
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:aarch64-unknown-nixos-gnu": [
            "@cu__memfd-0.6.4//:memfd",  # cfg(target_os = "linux")
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:aarch64-unknown-nto-qnx710": [
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:arm-unknown-linux-gnueabi": [
            "@cu__memfd-0.6.4//:memfd",  # cfg(target_os = "linux")
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:armv7-linux-androideabi": [
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi": [
            "@cu__memfd-0.6.4//:memfd",  # cfg(target_os = "linux")
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:i686-apple-darwin": [
            "@cu__mach2-0.4.2//:mach2",  # cfg(target_os = "macos")
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:i686-linux-android": [
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:i686-pc-windows-msvc": [
            "@cu__windows-sys-0.52.0//:windows_sys",  # cfg(target_os = "windows")
        ],
        "@rules_rust//rust/platform:i686-unknown-freebsd": [
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:i686-unknown-linux-gnu": [
            "@cu__memfd-0.6.4//:memfd",  # cfg(target_os = "linux")
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:powerpc-unknown-linux-gnu": [
            "@cu__memfd-0.6.4//:memfd",  # cfg(target_os = "linux")
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:s390x-unknown-linux-gnu": [
            "@cu__memfd-0.6.4//:memfd",  # cfg(target_os = "linux")
            "@cu__psm-0.1.21//:psm",  # cfg(target_arch = "s390x")
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "@cu__mach2-0.4.2//:mach2",  # cfg(target_os = "macos")
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:x86_64-apple-ios": [
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:x86_64-fuchsia": [
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:x86_64-linux-android": [
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "@cu__windows-sys-0.52.0//:windows_sys",  # cfg(target_os = "windows")
        ],
        "@rules_rust//rust/platform:x86_64-unknown-freebsd": [
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@cu__memfd-0.6.4//:memfd",  # cfg(target_os = "linux")
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "@rules_rust//rust/platform:x86_64-unknown-nixos-gnu": [
            "@cu__memfd-0.6.4//:memfd",  # cfg(target_os = "linux")
            "@cu__rustix-0.38.34//:rustix",  # cfg(unix)
        ],
        "//conditions:default": [],
    }),
)

cargo_build_script(
    name = "wasmtime_bs",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = False,
    ),
    crate_features = [
        "cranelift",
        "gc",
        "runtime",
        "std",
    ],
    crate_name = "build_script_build",
    crate_root = "build.rs",
    data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    edition = "2021",
    proc_macro_deps = [
        "@cu__wasmtime-versioned-export-macros-24.0.0//:wasmtime_versioned_export_macros",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=wasmtime",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "24.0.0",
    visibility = ["//visibility:private"],
    deps = [
        "@cu__cc-1.1.7//:cc",
    ],
)

alias(
    name = "build_script_build",
    actual = ":wasmtime_bs",
    tags = ["manual"],
)
