ARG_ENABLE("protobuf", "whether to enable Protobuf extension", "no");

if (PHP_PROTOBUF != "no") {

  var PHP_PROTOBUF_SRC_ARRAY = glob(configure_module_dirname + "/third_party/utf8_range/*.c");
  var PHP_PROTOBUF_SOURCES=" ";
  for (var i=0; i<PHP_PROTOBUF_SRC_ARRAY.length; ++i) {
    var basename = FSO.GetFileName(PHP_PROTOBUF_SRC_ARRAY[i]);
    PHP_PROTOBUF_SOURCES = PHP_PROTOBUF_SOURCES + " " + basename;
  }
  ADD_SOURCES(configure_module_dirname + "/third_party/utf8_range", PHP_PROTOBUF_SOURCES, "PROTOBUF");
  ADD_FLAG("CFLAGS_PROTOBUF", "/I" + configure_module_dirname + "/third_party/utf8_range");
  EXTENSION("protobuf", "arena.c array.c convert.c def.c map.c message.c names.c php-upb.c protobuf.c");
}
