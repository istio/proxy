// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package proto_util_converter.testing;

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

// Top-level test cases proto used by MarshallingTest. See description
// at the top of the class MarshallingTest for details on how to write
// test cases.
message AnyTestCases {
  AnyWrapper empty_any = 1;
  AnyWrapper type_only_any = 2;
  AnyWrapper wrapper_any = 3;
  AnyWrapper any_with_timestamp_value = 4;
  AnyWrapper any_with_duration_value = 5;
  AnyWrapper any_with_struct_value = 6;
  AnyWrapper recursive_any = 7;
  AnyWrapper any_with_message_value = 8;
  AnyWrapper any_with_nested_message = 9;
  AnyWrapper any_with_message_with_wrapper_type = 10;
  AnyWrapper any_with_message_with_timestamp = 11;
  AnyWrapper any_with_message_containing_map = 12;
  AnyWrapper any_with_message_containing_struct = 13;
  AnyWrapper any_with_message_containing_repeated_message = 14;
  AnyWrapper recursive_any_with_type_field_at_end = 15;
  AnyWrapper repeated_any = 16;
  AnyWrapper empty_any_with_null_type_url = 17;
  AnyWrapper any_with_empty = 18;
  AnyWrapper any_with_default_timestamp = 19;

  google.protobuf.Any top_level_any = 50;
  google.protobuf.Any top_level_any_with_type_field_at_end = 51;
  google.protobuf.Any top_level_any_with_pivot_one = 52;
  google.protobuf.Any top_level_any_with_pivot_two = 53;
  google.protobuf.Any top_level_any_unordered = 54;
}

message AnyWrapper {
  google.protobuf.Any any = 1;
}

// Hack to make sure the types we put into the any are included in the types.
// Real solution is to add these types to the service config.
message Imports {
  google.protobuf.DoubleValue dbl = 1;
  google.protobuf.Struct struct = 2;
  google.protobuf.Timestamp timestamp = 3;
  google.protobuf.Duration duration = 4;
  google.protobuf.Int32Value i32 = 5;
  google.protobuf.Empty empty = 6;
  Data data = 100;
}

message Data {
  int32 attr = 1;
  string str = 2;
  repeated string msgs = 3;
  Data nested_data = 4;
  google.protobuf.Int32Value int_wrapper = 5;
  google.protobuf.Timestamp time = 6;
  map<string, string> map_data = 7;
  google.protobuf.Struct struct_data = 8;
  repeated Data repeated_data = 9;
  repeated google.protobuf.Any repeated_any = 10;
}

service AnyTestService {
  rpc Call(AnyTestCases) returns (AnyTestCases);
  rpc Call1(Imports) returns (Imports);
}

message AnyIn {
  string something = 1;
  google.protobuf.Any any = 2;
}

message AnyOut {
  google.protobuf.Any any = 1;
}

message AnyM {
  string foo = 1;
}
