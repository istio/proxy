# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "field_value_extractor_interface",
    hdrs = ["field_value_extractor_interface.h"],
    deps = [
        "//proto_field_extraction/message_data:message_data_interface",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "field_value_extractor",
    srcs = ["field_value_extractor.cc"],
    hdrs = ["field_value_extractor.h"],
    deps = [
        ":field_value_extractor_interface",
        "//proto_field_extraction/field_extractor",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_protobuf//:protobuf",
        "@ocp//ocpdiag/core/compat:status_macros",
    ],
)

cc_test(
    name = "field_value_extractor_test",
    size = "small",
    srcs = ["field_value_extractor_test.cc"],
    data = [
        "//proto_field_extraction/test_utils/testdata:field_extractor_test_proto_descriptor",
        "//proto_field_extraction/test_utils/testdata:field_value_extractor_test_message.proto.txt",
    ],
    tags = ["unit"],
    deps = [
        ":field_value_extractor",
        "//proto_field_extraction/field_extractor",
        "//proto_field_extraction/message_data:cord_message_data",
        "//proto_field_extraction/test_utils:utils",
        "//proto_field_extraction/test_utils/testdata:field_extractor_test_cc_proto",
        "@com_google_absl//absl/functional:bind_front",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:cord",
        "@com_google_googleapis//google/api:service_cc_proto",
        "@com_google_googletest//:gtest_main",
        "@com_google_protobuf//:protobuf",
        "@grpc_httpjson_transcoding//src:type_helper",
        "@ocp//ocpdiag/core/compat:status_macros",
        "@ocp//ocpdiag/core/testing:parse_text_proto",
        "@ocp//ocpdiag/core/testing:proto_matchers",
        "@ocp//ocpdiag/core/testing:status_matchers",
    ],
)

cc_library(
    name = "field_value_extractor_factory",
    srcs = ["field_value_extractor_factory.cc"],
    hdrs = ["field_value_extractor_factory.h"],
    deps = [
        ":field_value_extractor",
        ":field_value_extractor_interface",
        "//proto_field_extraction/field_extractor",
        "//proto_field_extraction/field_extractor:field_extractor_util",
        "//proto_field_extraction/utils:constants",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_googleapis//google/api:service_cc_proto",
        "@ocp//ocpdiag/core/compat:status_macros",
    ],
)

cc_test(
    name = "field_value_extractor_factory_test",
    size = "small",
    srcs = ["field_value_extractor_factory_test.cc"],
    data = [
        "//proto_field_extraction/test_utils/testdata:field_extractor_test_proto_descriptor",
        "//proto_field_extraction/test_utils/testdata:field_value_extractor_test_message.proto.txt",
    ],
    tags = ["unit"],
    deps = [
        ":field_value_extractor",
        ":field_value_extractor_factory",
        #        "//file/base",
        #        "//file/base:path",
        "@ocp//ocpdiag/core/compat:status_macros",
        "@ocp//ocpdiag/core/testing:proto_matchers",
        "@ocp//ocpdiag/core/testing:status_matchers",
        "//proto_field_extraction/message_data:cord_message_data",
        "//proto_field_extraction/test_utils:utils",
        "//proto_field_extraction/test_utils/testdata:field_extractor_test_cc_proto",
        "@com_google_absl//absl/functional:bind_front",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_googleapis//google/api:service_cc_proto",
        "@com_google_googletest//:gtest_main",
        "@com_google_protobuf//:protobuf",
    ],
)

#cc_test(
#    name = "field_value_extractor_fuzz_test",
#    srcs = ["field_value_extractor_fuzz_test.cc"],
#    data = [
#        "//proto_field_extraction/test_utils/testdata:field_extractor_test_proto_descriptor",
#        "//proto_field_extraction/test_utils/testdata:field_value_extractor_test_message.proto.txt",
#    ],
#    deps = [
#        ":field_value_extractor",
#        "//proto_field_extraction/message_data:cord_message_data",
#        "//proto_field_extraction/test_utils:utils",
#        "//proto_field_extraction/test_utils/testdata:field_extractor_test_cc_proto",
#        "//testing/fuzzing:fuzztest",
#        "@com_google_absl//absl/functional:bind_front",
#        "@com_google_absl//absl/strings",
#        "@com_google_googleapis//google/api:service_cc_proto",
#        "@com_google_googletest//:gtest_main",
#    ],
#)
