load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "afero",
    srcs = [
        "afero.go",
        "basepath.go",
        "cacheOnReadFs.go",
        "const_bsds.go",
        "const_win_unix.go",
        "copyOnWriteFs.go",
        "httpFs.go",
        "ioutil.go",
        "lstater.go",
        "match.go",
        "memmap.go",
        "os.go",
        "path.go",
        "readonlyfs.go",
        "regexpfs.go",
        "symlink.go",
        "unionFile.go",
        "util.go",
    ],
    importpath = "github.com/spf13/afero",
    visibility = ["//visibility:public"],
    deps = [
        "//mem",
        "@org_golang_x_text//transform:go_default_library",
        "@org_golang_x_text//unicode/norm:go_default_library",
    ],
)

alias(
    name = "go_default_library",
    actual = ":afero",
    visibility = ["//visibility:public"],
)

go_test(
    name = "afero_test",
    srcs = [
        "afero_test.go",
        "basepath_test.go",
        "composite_test.go",
        "copyOnWriteFs_test.go",
        "ioutil_test.go",
        "lstater_test.go",
        "match_test.go",
        "memmap_test.go",
        "path_test.go",
        "ro_regexp_test.go",
        "symlink_test.go",
        "util_test.go",
    ],
    embed = [":afero"],
)

load("@rules_license//rules:package_info.bzl", "package_info")

package_info(
    name = "gazelle_generated_package_info",
    package_name = "github.com/spf13/afero",
    package_url = "https://github.com/spf13/afero",
    package_version = "1.3.3",
    purl = "pkg:golang/github.com/spf13/afero@v1.3.3",
    visibility = ["//:__subpackages__"],
)
