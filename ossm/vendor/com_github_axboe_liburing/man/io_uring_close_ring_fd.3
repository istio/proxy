.\" Copyright (C) 2022 Jens Axboe <axboe@kernel.dk>
.\" Copyright (C) 2022 Josh Triplett <josh@joshtriplett.org>
.\"
.\" SPDX-License-Identifier: LGPL-2.0-or-later
.\"
.TH io_uring_close_ring_fd 3 "September 25, 2022" "liburing-2.4" "liburing Manual"
.SH NAME
io_uring_close_ring_fd \- close a ring file descriptor and use it only via registered index
.SH SYNOPSIS
.nf
.B #include <liburing.h>
.PP
.BI "int io_uring_close_ring_fd(struct io_uring *" ring ");"
.fi
.SH DESCRIPTION
.PP
.BR io_uring_close_ring_fd (3)
closes the ring file descriptor, which must have been previously registered.
The file will remain open, but accessible only via the registered index, not
via any file descriptor. Subsequent liburing calls will continue to work, using
the registered ring fd.

The kernel must support
.BR IORING_FEAT_REG_REG_RING .

Libraries that must avoid disrupting their users' uses of file descriptors, and
must continue working even in the face of
.BR close_range (2)
and similar, can use
.BR io_uring_close_ring_fd (3)
to work with liburing without having any open file descriptor.

.SH NOTES
Each thread that wants to make use of io_uring must register the fd. A library
that may get called from arbitrary theads may need to detect when it gets
called on a previously unseen thread and create and register a ring for that
thread.
.SH RETURN VALUE
Returns 1 on success, or
.BR -errno
on error.
.SH SEE ALSO
.BR io_uring_register_ring_fd (3)
