.\" Copyright (C) 2022 Jens Axboe <axboe@kernel.dk>
.\"
.\" SPDX-License-Identifier: LGPL-2.0-or-later
.\"
.TH io_uring_prep_mkdirat 3 "March 13, 2022" "liburing-2.2" "liburing Manual"
.SH NAME
io_uring_prep_mkdirat \- prepare an mkdirat request
.SH SYNOPSIS
.nf
.B #include <fcntl.h>
.B #include <sys/stat.h>
.B #include <liburing.h>
.PP
.BI "void io_uring_prep_mkdirat(struct io_uring_sqe *" sqe ","
.BI "                           int " dirfd ","
.BI "                           const char *" path ","
.BI "                           mode_t " mode ");"
.PP
.BI "void io_uring_prep_mkdir(struct io_uring_sqe *" sqe ","
.BI "                         const char *" path ","
.BI "                         mode_t " mode ");"
.fi
.SH DESCRIPTION
.PP
The
.BR io_uring_prep_mkdirat (3)
function prepares a mkdirat request. The submission queue entry
.I sqe
is setup to use the directory file descriptor pointed to by
.I dirfd
to start a mkdirat operation on the path identified by
.I path
with the mode given in
.IR mode .

The
.BR io_uring_prep_mkdir (3)
function prepares a mkdir request. The submission queue entry
.I sqe
is setup to use the current working directory to start a mkdir
operation on the path identified by
.I path
with the mode given in
.IR mode .

These functions prepare an async
.BR mkdir (2)
or
.BR mkdirat (2)
request. See those man pages for details.

.SH RETURN VALUE
None
.SH ERRORS
The CQE
.I res
field will contain the result of the operation. See the related man page for
details on possible values. Note that where synchronous system calls will return
.B -1
on failure and set
.I errno
to the actual error value, io_uring never uses
.IR errno .
Instead it returns the negated
.I errno
directly in the CQE
.I res
field.
.SH NOTES
As with any request that passes in data in a struct, that data must remain
valid until the request has been successfully submitted. It need not remain
valid until completion. Once a request has been submitted, the in-kernel
state is stable. Very early kernels (5.4 and earlier) required state to be
stable until the completion occurred. Applications can test for this
behavior by inspecting the
.B IORING_FEAT_SUBMIT_STABLE
flag passed back from
.BR io_uring_queue_init_params (3).
.SH SEE ALSO
.BR io_uring_get_sqe (3),
.BR io_uring_submit (3),
.BR mkdirat (2),
.BR mkdir (2)
